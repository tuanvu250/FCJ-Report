[
{
	"uri": "https://tuanvu250.github.io/FCJ-Report/vi/1-worklog/1.7-week7/",
	"title": "Worklog Tuần 7",
	"tags": [],
	"description": "",
	"content": "Mục tiêu tuần 7: Thực hành deploy static website lên AWS và cấu hình Github Actions với AWS IAM User. Thực hành chuyển đổi ứng dụng Monolith sang Microservices: tách biệt các thành phần, containerization. Học và thực hành AWS Developer Tools: CodeStar, CodePipeline, CodeBuild, CodeDeploy. Thực hành CI/CD Pipeline: tự động hóa quy trình build, test và deploy ứng dụng. Thực hành tạo Microservice: thiết kế, triển khai và quản lý microservices trên AWS. Thực hành cơ cấu lại dữ liệu và quy trình làm việc: tối ưu hóa kiến trúc ứng dụng. Thực hành Amazon Kinesis: streaming data, real-time data processing. Thực hành xây dựng Single Page Application (SPA) với xác thực: tích hợp authentication và authorization. Các công việc cần triển khai trong tuần này: Ngày Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 1 - Thực hành deploy stactic website lên AWS và cấu hình Github Actions với AWS IAM User 20/10/2025 20/10/2025 https://www.youtube.com/watch?v=oSZ0tzlkuWo 2 - Thực hành Chuyển đổi Ứng dụng Monolith 21/10/2025 21/10/2025 https://000050.awsstudygroup.com/vi/ 3 - Thực hành cấu hình tự động phát hành ứng dụng (AWS CodeStar, AWS CodePipeline, AWS CodeBuild, AWS CodeDeploy) 22/10/2025 22/10/2025 https://000051.awsstudygroup.com/vi/ 4 - Thực hành tạo một Microservice - Cơ cấu lại dữ liệu và quy trình làm việc 23/10/2025 23/10/2025 https://000052.awsstudygroup.com/vi/ https://000053.awsstudygroup.com/vi/ 5 - Thực hành truyền thông tin với Kinesis 24/10/2025 24/10/2025 https://000054.awsstudygroup.com/vi/ 6 - Thực hành tạo một Ứng dụng Đơn trang (SPA) được xác thực 25/10/2025 25/10/2025 https://000055.awsstudygroup.com/vi/ Kết quả đạt được tuần 7: Thực hành thành công deploy static website lên AWS với Github Actions: Cấu hình S3 bucket để host static website Thiết lập AWS IAM User với quyền phù hợp Tạo và cấu hình Github Actions workflow Tự động hóa quá trình deploy khi push code lên repository Hoàn thành lab chuyển đổi ứng dụng Monolith sang Microservices: Phân tích và tách biệt các thành phần của ứng dụng monolith Containerize các services với Docker Triển khai các containers độc lập trên AWS Hiểu được ưu điểm của kiến trúc microservices Thực hành thành công AWS Developer Tools - CI/CD Pipeline: Thiết lập AWS CodeStar để quản lý project Cấu hình AWS CodePipeline cho automation workflow Sử dụng AWS CodeBuild để build ứng dụng Triển khai tự động với AWS CodeDeploy Tích hợp toàn bộ quy trình từ commit đến production Hoàn thành lab tạo Microservice: Thiết kế và phát triển microservice độc lập Cấu hình API endpoints và communication Deploy microservice lên AWS Testing và monitoring microservice Thực hành thành công cơ cấu lại dữ liệu và quy trình làm việc: Tối ưu hóa database schema cho microservices Refactor code và workflow Áp dụng best practices cho kiến trúc phân tán Cải thiện performance và scalability Hoàn thành lab truyền thông tin với Amazon Kinesis: Thiết lập Kinesis Data Streams Xử lý real-time data streaming Tích hợp Kinesis với Lambda functions Phân tích và xử lý dữ liệu theo thời gian thực Thực hành thành công xây dựng Single Page Application (SPA) với xác thực: Phát triển SPA với modern JavaScript framework Tích hợp authentication system Cấu hình authorization và access control Deploy SPA lên AWS với secure configuration Kết nối frontend với backend APIs "
},
{
	"uri": "https://tuanvu250.github.io/FCJ-Report/vi/1-worklog/1.6-week6/",
	"title": "Worklog Tuần 6",
	"tags": [],
	"description": "",
	"content": "Mục tiêu tuần 6: Học và nắm vững Docker và Docker Compose: containerization, docker images, docker-compose. Thực hành triển khai ứng dụng trên Docker với AWS: tạo Docker image, push lên ECR. Thực hành Amazon Elastic Container Service (ECS): triển khai và quản lý container trên AWS. Tìm hiểu về Nginx: reverse proxy, load balancing, web server configuration. Tham gia workshop \u0026ldquo;DATA SCIENCE ON AWS\u0026rdquo;: khám phá các dịch vụ data science và machine learning trên AWS. Thực hành Serverless Architecture: API Gateway, Lambda, SAM deployment. Thực hành Amazon Cognito: xác thực và phân quyền người dùng. Thực hành S3 Static Website với SSL: thiết lập website tĩnh bảo mật trên S3. Các công việc cần triển khai trong tuần này: Ngày Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 1 - Tìm hiểu về docker, docker-compose 13/10/2025 13/10/2025 https://github.com/tuanvu250/AWS-FCJ/tree/main/bonus/docker https://docs.docker.com/get-started/ 2 -Thực hành Triển khai ứng dụng trên Docker với AWS - Thực hành Triển khai ứng dụng trên Amazon Elastic Container Service 14/10/2025 14/10/2025 https://000015.awsstudygroup.com/vi/ https://000016.awsstudygroup.com/vi/ 3 - Tìm hiểu về Nginx 15/10/2025 15/10/2025 https://github.com/tuanvu250/AWS-FCJ/tree/main/bonus/nginx https://www.youtube.com/watch?v=C_cVyFWD2KQ\u0026t=2774s 4 - WORKSHOP “DATA SCIENCE ON AWS” – MỞ KHÓA SỨC MẠNH DỮ LIỆU CÙNG ĐIỆN TOÁN ĐÁM MÂY 16/10/2025 16/10/2025 https://qhdn-hcmuni.fpt.edu.vn/2025/10/13/workshop-data-science-on-aws-mo-khoa-suc-manh-du-lieu-cung-dien-toan-dam-may/ 5 - Serverless - Hướng dẫn viết Front-end gọi API Gateway - Serverless - Triển khai ứng dụng trên SAM 17/10/2025 17/10/2025 https://000079.awsstudygroup.com/vi/ https://000080.awsstudygroup.com/vi/ 6 - Serverless - Xác thực với Amazon Cognito - Serverless - Thiết lập trang web SSL S3 Static 18/10/2025 18/10/2025 https://000081.awsstudygroup.com/vi/ https://000082.awsstudygroup.com/vi/ Kết quả đạt được tuần 6: Hoàn thành việc học về Docker và Docker Compose: Hiểu về containerization và các khái niệm cơ bản Nắm vững cách tạo Dockerfile và docker-compose.yml Quản lý Docker images và containers Thực hành thành công triển khai ứng dụng trên Docker với AWS: Tạo và quản lý Docker images Push images lên Amazon ECR (Elastic Container Registry) Triển khai ứng dụng containerized trên AWS Hoàn thành lab Amazon Elastic Container Service (ECS): Tạo và cấu hình ECS cluster Triển khai task definitions và services Quản lý và scale containers trên ECS Học thành công về Nginx: Hiểu về reverse proxy và load balancing Cấu hình Nginx làm web server Áp dụng Nginx trong kiến trúc microservices Tham gia workshop \u0026ldquo;DATA SCIENCE ON AWS\u0026rdquo;: khám phá các dịch vụ data science và machine learning trên AWS, học cách áp dụng điện toán đám mây vào phân tích dữ liệu. Hoàn thành các lab Serverless Architecture: Viết Front-end gọi API Gateway Triển khai ứng dụng với AWS SAM (Serverless Application Model) Tích hợp Lambda functions với API Gateway Thực hành thành công Amazon Cognito: Thiết lập user pools và identity pools Xác thực và phân quyền người dùng Tích hợp Cognito với ứng dụng web Hoàn thành lab S3 Static Website với SSL: Thiết lập S3 bucket để host static website Cấu hình SSL/TLS certificate Triển khai website tĩnh bảo mật với HTTPS "
},
{
	"uri": "https://tuanvu250.github.io/FCJ-Report/vi/1-worklog/1.5-week5/",
	"title": "Worklog Tuần 5",
	"tags": [],
	"description": "",
	"content": "Mục tiêu tuần 5: Học và nắm vững các dịch vụ cơ sở dữ liệu trên AWS: Amazon RDS, Amazon Aurora, Redshift, Elasticache. Thực hành Amazon RDS: tạo và quản lý RDS instance. Thực hành xây dựng DataLake trên AWS: thu thập và lưu trữ dữ liệu, tạo Data Catalog với Amazon Glue, phân tích và trực quan hóa với Amazon Athena. Thực hành Amazon DynamoDB Immersion Day: làm việc với DynamoDB, hiểu về NoSQL database. Thực hành phân tích chi phí và hiệu năng sử dụng AWS Glue và Amazon Athena. Thực hành xây dựng Datalake với dữ liệu thực tế. Các công việc cần triển khai trong tuần này: Ngày Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 1 - - Dịch vụ cơ sở dữ liệu trên AWS: + Amazon RDS \u0026amp; Amazon Aurora + Redshift - Elasticache 06/10/2025 06/10/2025 https://github.com/tuanvu250/AWS-FCJ/blob/main/module/module-05/note.md 2 - Thực hành bắt đầu với Amazon RDS: \u0026amp;emsp - Thực hành DataLake on AWS + Thu thập và lưu trữ dữ liệu + Tạo Data Catalog (Amazon Glue)\n+ Phân tích và trực quan hóa (Amazon Athena) 07/10/2025 07/10/2025 https://000005.awsstudygroup.com/vi/ https://000035.awsstudygroup.com/vi/ 3 - Thực hành Amazon DynamoDB Immersion Day 08/10/2025 08/10/2025 https://000039.awsstudygroup.com/vi/ 4 - Thực hành Amazon DynamoDB Immersion Day 09/10/2025 09/10/2025 https://000039.awsstudygroup.com/vi/ 5 - Thực hành Phân tích chi phí và hiệu năng sử dụng với AWS Glue và Amazon Athena - Thực hành Làm việc với Amazon DynamoDB 10/10/2025 10/10/2025 https://000040.awsstudygroup.com/vi/ https://000060.awsstudygroup.com/vi/ 6 - Thực hành Xây dựng Datalake với dữ liệu của bạn 11/10/2025 11/10/2025 https://000070.awsstudygroup.com/vi/ Kết quả đạt được tuần 5: Hoàn thành việc học về dịch vụ cơ sở dữ liệu trên AWS: Amazon RDS, Amazon Aurora, Redshift và Elasticache. Thực hành thành công Amazon RDS: tạo, cấu hình và quản lý RDS instance. Hoàn thành lab DataLake trên AWS: Thu thập và lưu trữ dữ liệu trên S3 Tạo Data Catalog sử dụng Amazon Glue Phân tích và trực quan hóa dữ liệu với Amazon Athena Thực hành thành công Amazon DynamoDB Immersion Day: nắm vững cách làm việc với NoSQL database, các khái niệm về partition key, sort key, GSI/LSI. Hoàn thành lab phân tích chi phí và hiệu năng với AWS Glue và Amazon Athena: tối ưu query, quản lý partition. Thực hành thành công xây dựng Datalake với dữ liệu thực tế: áp dụng toàn bộ kiến thức đã học về data pipeline, ETL và analytics. "
},
{
	"uri": "https://tuanvu250.github.io/FCJ-Report/vi/1-worklog/1.4-week4/",
	"title": "Worklog Tuần 4",
	"tags": [],
	"description": "",
	"content": "Mục tiêu tuần 4: Học và nắm vững các dịch vụ bảo mật trên AWS: Share Responsibility Model, AWS IAM, Amazon Cognito, AWS Organizations, AWS KMS. Thực hành AWS Security Hub: kích hoạt Security Hub và điểm từng bộ tiêu chuẩn bảo mật. Thực hành tối ưu chi phí EC2 với Lambda: tạo Tag cho Instance, Role cho Lambda và Lambda Function. Quản lý tài nguyên với Tag và Resource Groups: quản lý truy cập EC2 Resource Tag, giới hạn quyền user với IAM Permission Boundary. Thực hành mã hóa dữ liệu với AWS KMS: tạo KMS, S3, CloudTrail, Athena và kiểm thử chia sẻ dữ liệu mã hóa. Thực hành IAM Role \u0026amp; Condition: cấp quyền cho ứng dụng truy cập dịch vụ AWS. Các công việc cần triển khai trong tuần này: Ngày Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 1 - Dịch vụ bảo mật trên AWS: + Share Responsibility Model + AWS Identity and Access Management + Amazon Cognito + AWS Organizations + Amazon Key Management Service 29/09/2025 29/09/2025 https://github.com/tuanvu250/AWS-FCJ/blob/main/module/module-05/note.md 2 -Thực hành bắt đầu với AWS Security Hub: + Kích hoạt Security Hub \u0026amp; điểm từng bộ tiêu chuẩn - Thực hành tối ưu chi phí EC2 với Lambda: + Tạo Tag cho Instance \u0026amp; Tạo Role cho Lambda + Tạo Lambda Function \u0026amp; kiểm tra kết quả 30/09/2025 30/09/2025 https://000018.awsstudygroup.com/vi/ https://000022.awsstudygroup.com/vi/ 3 - Quản lý tài nguyên bằng Tag và Resource Groups - Quản lý truy cập vào dịch vụ EC2 Resource Tag với AWS IAM - Giới hạn quyền của user với IAM Permission Boundary 01/10/2025 01/10/2025 https://000027.awsstudygroup.com/vi/ https://000028.awsstudygroup.com/vi/ https://000030.awsstudygroup.com/vi/ 4 - Thực hành Mã hóa ở trạng thái lưu trữ với AWS KMS: + Tạo Key Management Service \u0026amp; Amazon S3 + Tạo AWS CloudTrail \u0026amp; Amazon Athena + Kiểm thử và chia sẻ dữ liệu mã hóa trên S3 - Thực hành IAM Role \u0026amp; Condition 02/10/2025 02/10/2025 https://000033.awsstudygroup.com/vi/ https://000044.awsstudygroup.com/vi/ 5 - Sự kiện [AWS GenAI Builder Club] AI-Driven Development Life Cycle: Reimagining Software Engineering (2pm Friday 3/10/2025) 03/10/2025 03/10/2025 6 - Thực hành Cấp quyền cho ứng dụng truy cập dịch vụ AWS với IAM Role - Dịch vụ cơ sở dữ liệu trên AWS: Database Concepts review 04/10/2025 04/10/2025 https://000048.awsstudygroup.com/ https://github.com/tuanvu250/AWS-FCJ/blob/main/module/module-06/note.md Kết quả đạt được tuần 4: Hoàn thành việc học về dịch vụ bảo mật trên AWS: Share Responsibility Model, AWS IAM, Amazon Cognito, AWS Organizations và AWS KMS. Thực hành thành công AWS Security Hub: kích hoạt Security Hub và điểm từng bộ tiêu chuẩn bảo mật. Hoàn thành lab tối ưu chi phí EC2 với Lambda: tạo Tag cho Instance, Role cho Lambda và Lambda Function, kiểm tra kết quả thành công. Thực hành thành công quản lý tài nguyên với Tag và Resource Groups, quản lý truy cập vào EC2 Resource Tag với AWS IAM, và giới hạn quyền user với IAM Permission Boundary. Hoàn thành lab mã hóa ở trạng thái lưu trữ với AWS KMS: tạo KMS, S3, CloudTrail, Athena và kiểm thử chia sẻ dữ liệu mã hóa thành công. Thực hành thành công IAM Role \u0026amp; Condition: cấp quyền cho ứng dụng truy cập dịch vụ AWS với IAM Role. Tham gia sự kiện [AWS GenAI Builder Club] AI-Driven Development Life Cycle: Reimagining Software Engineering. Học và ghi chú về Database Concepts trên AWS. "
},
{
	"uri": "https://tuanvu250.github.io/FCJ-Report/vi/4-eventparticipated/4.2-event2/",
	"title": "Event 2",
	"tags": [],
	"description": "",
	"content": "Bài thu hoạch \u0026ldquo;AI-Driven Development Life Cycle: Reimagining Software Engineering\u0026rdquo; Mục Đích Của Sự Kiện Khám phá cách AI thay đổi toàn bộ vòng đời phát triển phần mềm, từ planning đến deployment. Tìm hiểu cách tích hợp AI để tăng năng suất và tập trung vào tác vụ sáng tạo có giá trị cao.\nThông Tin Sự Kiện Thời gian: 2:00 PM - 4:30 PM, Thứ Sáu, 03/10/2025 Địa điểm: AWS Event Hall, L26 Bitexco Tower, HCMC Diễn giả: Toan Huynh, My Nguyen Nội Dung Nổi Bật 1. AI in Development - Outcomes Việc áp dụng AI mang lại:\nVelocity - Giảm time-to-market Quality - Đáp ứng usability, reliability Market Responsiveness - Phản ứng nhanh với thị trường Innovation - Thúc đẩy đổi mới Developer Engagement - Tăng sự hài lòng của developers Productivity - Tăng giá trị, giảm chi phí 2. Challenges with AI Development AI-Managed: Không đáng tin cậy, khó giải thích, thiếu linh hoạt\nAI-Assisted: Không hiệu quả thực sự, manual inefficiencies, technical debts tích lũy\n3. AI-Driven Development Lifecycle (AI-DLC) Core Concept:\nAI as Collaborator: AI hỗ trợ developers, con người kiểm soát quyết định quan trọng Human-Centric: Developers là trung tâm, AI enhance không replace Accelerated Delivery: Chu kỳ phát triển giảm từ tuần/tháng xuống giờ/ngày Hai giai đoạn:\nInception: Build Context → User Stories → Plan Construction: Domain Model → Generate code → Deploy với IaaC 4. 5-Stage Sequential Process Product Owner → 2. Architect (Design) → 3. Architect (Construction) → 4. Engineer (POC) → 5. Engineer (MVP) 5. Anti-Patterns - 7 điều cần tránh Không single-shot multi-step problems Tối ưu semantics-to-token ratio Refresh context strategically Kiểm soát AI over-reach Model biết cái cũ hơn cái mới Brownfield cần context building đặc biệt Cần độ chính xác như phẫu thuật 6. Amazon Q Developer Prompt Structure: Role → Plan (markdown với checkboxes) → Task\nExample: Xây dựng travel booking app với AI integration\nWorkflow: Tạo thư mục → User stories → Clarification → Checkbox → Review → Execute\n7. Kiro - AI-Powered Coding Assistant Kiro là AI coding assistant của AWS với 4 tính năng chính:\nAgent Hooks: Tự động trigger tasks khi events (file save), generate docs/tests/optimize VS Code Compatible: Hỗ trợ plugins, themes, settings Claude Models: Sonnet 3.7/4 với reasoning mạnh mẽ Enterprise Security: Built \u0026amp; operated by AWS Ưu điểm: Automation cao, context-aware, documentation-driven, enterprise-ready\nNhững Gì Học Được Tham gia workshop “GenAI-powered App-DB Modernization” là một trải nghiệm rất bổ ích, giúp tôi có cái nhìn toàn diện về cách hiện đại hóa ứng dụng và cơ sở dữ liệu bằng các phương pháp và công cụ hiện đại. Một số trải nghiệm nổi bật:\nHọc hỏi từ các diễn giả có chuyên môn cao Các diễn giả đến từ AWS và các tổ chức công nghệ lớn đã chia sẻ best practices trong thiết kế ứng dụng hiện đại. Qua các case study thực tế, tôi hiểu rõ hơn cách áp dụng Domain-Driven Design (DDD) và Event-Driven Architecture vào các project lớn. Trải nghiệm kỹ thuật thực tế Tham gia các phiên trình bày về event storming giúp tôi hình dung cách mô hình hóa quy trình kinh doanh thành các domain events. Học cách phân tách microservices và xác định bounded contexts để quản lý sự phức tạp của hệ thống lớn. Hiểu rõ trade-offs giữa synchronous và asynchronous communication cũng như các pattern tích hợp như pub/sub, point-to-point, streaming. Ứng dụng công cụ hiện đại Trực tiếp tìm hiểu về Amazon Q Developer, công cụ AI hỗ trợ SDLC từ lập kế hoạch đến maintenance. Học cách tự động hóa code transformation và pilot serverless với AWS Lambda, từ đó nâng cao năng suất phát triển. Bài học rút ra Việc áp dụng DDD và event-driven patterns giúp giảm coupling, tăng scalability và resilience cho hệ thống. Chiến lược hiện đại hóa cần phased approach và đo lường ROI, không nên vội vàng chuyển đổi toàn bộ hệ thống. Các công cụ AI như Amazon Q Developer có thể boost productivity nếu được tích hợp vào workflow phát triển hiện tại. Một số hình ảnh khi tham gia sự kiện Thêm các hình ảnh của các bạn tại đây Tổng thể, sự kiện không chỉ cung cấp kiến thức kỹ thuật mà còn giúp tôi thay đổi cách tư duy về thiết kế ứng dụng, hiện đại hóa hệ thống và phối hợp hiệu quả hơn giữa các team.\n"
},
{
	"uri": "https://tuanvu250.github.io/FCJ-Report/vi/1-worklog/1.3-week3/",
	"title": "Worklog Tuần 3",
	"tags": [],
	"description": "",
	"content": "Mục tiêu tuần 3: Học và nắm vững các dịch vụ lưu trữ trên AWS: Amazon S3, Access Point, Storage Class, S3 Static Website, CORS, Control Access, Object Key \u0026amp; Performance, Glacier. Tìm hiểu về Snow Family, Storage Gateway và AWS Backup: các giải pháp di chuyển dữ liệu và sao lưu. Thực hành triển khai AWS Backup: tạo S3 bucket, backup plan, thiết lập thông báo và kiểm tra kết quả. Thực hành VM Import/Export: import máy ảo vào AWS, triển khai EC2 từ AMI và export EC2 Instance. Thực hành triển khai FSx trên Windows: tạo file system SSD/HDD Multi-AZ, File Shares, giám sát hiệu năng và các tính năng nâng cao. Thực hành Amazon S3: tạo bucket, static website, tích hợp CloudFront, versioning và cross-region replication. Các công việc cần triển khai trong tuần này: Ngày Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 1 - Dịch vụ lưu trữ trên AWS: + Amazon Simple Storage Service ( S3 ) + Access Point + Storage Class + S3 Static Website \u0026amp; CORS 22/09/2025 22/09/2025 https://github.com/tuanvu250/AWS-FCJ/blob/main/module/module-04/note.md 2 - Dịch vụ lưu trữ trên AWS: + Control Access + Object Key \u0026amp; Performance + Glacier + Snow Family - Storage Gateway - Backup 23/09/2025 23/09/2025 https://github.com/tuanvu250/AWS-FCJ/blob/main/module/module-04/note.md 3 - Thực hành triển khai AWS Backup cho hệ thống: + Tạo S3 Bucket \u0026amp; triển khai hạ tầng + Tạo Backup plan, thiết lập thông báo + Kiểm tra hoạt động 24/09/2025 24/09/2025 https://000013.awsstudygroup.com/vi/ 4 - Thực hành về VM Import/Export: + Import máy ảo vào AWS + Triển khai EC2 Instance từ AMI + Export EC2 Instance từ AWS 24/09/2025 24/09/2025 https://000014.awsstudygroup.com/vi/ 5 - Thực hành triển khai FSx trên Windows: + Tạo một SSD và một HDD Multi-AZ file system + Tạo File Sharesm, kiểm tra và giám sát hiệu năng + Kích hoạt chống dữ liệu trùng lặp và shadow copies + Kích hoạt ngạch bộ nhớ và chia sẻ truy cập liên tục cùng khả năng mở rộng thông lượng và dung lượng lưu trữ; 26/09/2025 26/09/2025 https://000025.awsstudygroup.com/vi/ 6 - Thực hành Khởi Đầu Với Amazon S3: + Tạo S3 bucket và tải dữ liệu web mẫu + Bật tính năng static website và kiểm tra + Tăng tốc Static Website với Cloudfront + Bucket Versioning và chuyển S3 Object sang region khác 27/09/2025 27/09/2025 https://000057.awsstudygroup.com/vi/ Kết quả đạt được tuần 3: Hoàn thành việc học về dịch vụ lưu trữ AWS: Amazon S3, Access Point, Storage Class, S3 Static Website, CORS, Control Access, Object Key \u0026amp; Performance, Glacier. Học và ghi chú đầy đủ về Snow Family, Storage Gateway và AWS Backup: hiểu rõ các giải pháp di chuyển dữ liệu và sao lưu. Thực hành triển khai AWS Backup: tạo S3 bucket \u0026amp; hạ tầng, tạo backup plan, thiết lập thông báo và kiểm tra hoạt động thành công. Hoàn thành lab VM Import/Export: import máy ảo vào AWS, triển khai EC2 Instance từ AMI và export EC2 Instance từ AWS. Thực hành triển khai FSx trên Windows: tạo SSD và HDD Multi-AZ file system, tạo File Shares, kiểm tra hiệu năng, kích hoạt deduplication, shadow copies, quota và mở rộng throughput/storage. Hoàn thành lab Amazon S3: tạo bucket \u0026amp; tải dữ liệu web, bật static website, tăng tốc với CloudFront, kích hoạt versioning và cross-region replication thành công. "
},
{
	"uri": "https://tuanvu250.github.io/FCJ-Report/vi/1-worklog/1.2-week2/",
	"title": "Worklog Tuần 2",
	"tags": [],
	"description": "",
	"content": "Mục tiêu tuần 2: Thực hành triển khai AWS Transit Gateway: tạo, cấu hình Attachments, Route Tables và cập nhật routing giữa các VPC. Nắm vững dịch vụ Compute VM trên AWS: EC2, Auto Scaling, EFS, FSx, Lightsail, MGN. Thực hành triển khai AWS Backup: tạo S3 bucket, backup plan, thiết lập thông báo và kiểm tra kết quả. Thực hành triển khai AWS Storage Gateway: tạo S3 bucket, EC2, cấu hình File Shares và kết nối với máy On-premise. Làm quen với dịch vụ Amazon S3: tạo bucket, bật static website, tăng tốc bằng CloudFront, quản lý versioning và cross-region replication. Các công việc cần triển khai trong tuần này: Ngày Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 1 - Thực hành AWS Transit Gateway: + Tạo Transit Gateway + Tạo Transit Gateway Attachments + Tạo Transit Gateway Route Tables + Thêm Transit Gateway Routes vào VPC Route Tables 15/09/2025 15/09/2025 https://000020.awsstudygroup.com/ 2 - Dịch vụ Compute VM trên AWS - Amazon Elastic Compute Cloud (EC2) - EC2 Auto Scaling - EFS/FSx - Lightsail - MGN 16/09/2025 16/09/2025 https://github.com/tuanvu250/AWS-FCJ/blob/main/module/module-03/note.md 3 - Thực hành triển khai AWS Backup cho hệ thống: + Tạo S3 Bucket \u0026amp; triển khai hạ tầng + Tạo Backup plan, thiết lập thông báo + Kiểm tra hoạt động 17/09/2025 17/09/2025 https://000013.awsstudygroup.com/vi/ 4 - Tham dự event Vietnam Cloud Day 2025 : Ho Chi Minh City Connect Edition for Builders (Track 1: GenAI \u0026amp; Data) 18/09/2025 18/09/2025 https://pages.awscloud.com/vietnam-cloud-day-hcmc-connect-edition 5 - Thực hành triển khai AWS Storage Gateway: + Tạo S3 Bucket \u0026amp; EC2 cho Storage Gateway + Tạo Storage Gateway và File Shares + Kết nối File shares ở máy On-premise 18/09/2025 18/09/2025 https://000024.awsstudygroup.com/vi/ 6 - Thực hành Khởi Đầu Với Amazon S3: + Tạo S3 bucket và tải dữ liệu web mẫu + Bật tính năng static website và kiểm tra + Tăng tốc Static Website với Cloudfront + Bucket Versioning và chuyển S3 Object sang region khác 20/09/2025 20/09/2025 https://000057.awsstudygroup.com/vi/ Kết quả đạt được tuần 2: Hoàn thành lab AWS Transit Gateway: tạo TGW, cấu hình Attachments, Route Tables và cập nhật VPC Route Tables để trung chuyển lưu lượng. Học và ghi chú đầy đủ về các dịch vụ Compute VM trên AWS: EC2, Auto Scaling, EFS, FSx, Lightsail, MGN. Thực hành triển khai AWS Backup: tạo bucket, backup plan, thông báo và kiểm tra job hoạt động thành công. Tham dự Vietnam Cloud Day 2025 tại HCMC, track GenAI \u0026amp; Data, cập nhật kiến thức thực tiễn từ AWS. Hoàn tất triển khai AWS Storage Gateway: tạo bucket, EC2, thiết lập File Shares và truy cập thành công từ môi trường On-premise. Hoàn thành lab Amazon S3: triển khai static website, tích hợp CloudFront, kích hoạt versioning và thử nghiệm cross-region replication. "
},
{
	"uri": "https://tuanvu250.github.io/FCJ-Report/vi/1-worklog/1.1-week1/",
	"title": "Worklog Tuần 1",
	"tags": [],
	"description": "",
	"content": "Mục tiêu tuần 1: Làm quen thành viên FCJ, nắm nội quy và quy trình làm việc. Chuẩn bị môi trường làm workshop: VS Code, Hugo, Git, AWS CLI, SSH. Thiết lập tài khoản và bảo mật cơ bản: bật MFA, tạo Admin Group/User, cấu hình Console và Support cases. Nắm vững nền tảng Networking trên AWS: VPC, Subnet, Route Table, IGW, NAT GW, Security Group, NACL, Route 53. Thực hành Compute \u0026amp; kết nối: tạo EC2, kết nối SSH, lab Site‑to‑Site VPN. Thiết lập Hybrid DNS với Route 53 Resolver (AD, forwarders, resolver rules) cho tra cứu hai chiều. Các công việc cần triển khai trong tuần này: Ngày Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 1 - Làm quen thành viên FCJ - Đọc và lưu ý nội quy/quy định - Chuẩn bị công cụ làm workshop (VS Code, Hugo, \u0026hellip;) - Giới thiệu về AWS \u0026amp; các khái niệm cơ bản 08/09/2025 08/09/2025 https://van-hoang-kha.github.io/vi/ 2 - Tạo mới tài khoản AWS - Kích hoạt MFA cho Tài khoản AWS - Tạo Admin Group và Admin User - Hỗ trợ Xác thực Tài khoản - Khám phá và cấu hình AWS Management Console - Tạo và Quản Lý Các Trường Hợp Hỗ Trợ trong AWS 09/09/2025 09/09/2025 https://000001.awsstudygroup.com/vi/ 3 - Các dịch vụ mạng trên AWS: + VPC, Subnet, Route Table + Internet Gateway, NAT Gateway + Security Group \u0026amp; NACL + VPC Peering, Transit Gateway (khái niệm) + Elastic Load Balancing, Route 53 (DNS) 10/09/2025 10/09/2025 https://github.com/tuanvu250/AWS-FCJ/blob/main/module/module-02/note.md 4 - Thực hành EC2: + Tạo EC2 instance + Kết nối SSH + Cấu hình Site to Site VPN 11/09/2025 11/09/2025 https://000003.awsstudygroup.com/ 5 - Thiết lập Hybrid DNS với Route 53 Resolver: + Kết nối đến RDGW + Triển khai Microsoft AD + Thiết lập DNS 12/09/2025 12/09/2025 https://000010.awsstudygroup.com/ 6 - Thiết lập VPC Peering + Tạo kết nối Peering giữa VPCs + Cập nhật Route tables và kiểm thử kết nối 13/09/2025 13/09/2025 https://000019.awsstudygroup.com/ Kết quả đạt được tuần 1: Chuẩn bị môi trường làm việc; nắm các khái niệm AWS cơ bản (account, region, AZ, nhóm dịch vụ). Thiết lập tài khoản và bảo mật: tạo AWS account, bật MFA, tạo Admin Group/User, xác thực tài khoản, cấu hình Console và quản lý Support cases. Kiến thức Networking nền tảng trên AWS: VPC, Subnet, Route Table, Internet Gateway, NAT Gateway, Security Group, NACL, Elastic Load Balancing, Route 53; khái niệm về Peering, VPN, Transit Gateway. Thực hành Compute \u0026amp; kết nối: triển khai EC2 instance, kết nối SSH, cấu hình Site‑to‑Site VPN ở mức lab. Thiết lập Hybrid DNS với Route 53 Resolver: kết nối RDGW, triển khai Microsoft AD, cấu hình DNS/forwarders và Resolver rules cho tra cứu hai chiều. Hoàn thiện worklog tuần 1 và rà soát/dọn dẹp các tài nguyên không còn sử dụng. "
},
{
	"uri": "https://tuanvu250.github.io/FCJ-Report/vi/",
	"title": "Báo cáo thực tập",
	"tags": [],
	"description": "",
	"content": "Báo cáo thực tập Thông tin sinh viên: Họ và tên: Uông Tuấn Vũ\nSố điện thoại: 0329 069 810\nEmail: vuuong02@gmail.com\nTrường: Đại học FPT TP.HCM\nNgành: Công nghệ thông tin\nLớp: SE180241\nCông ty thực tập: Công ty TNHH Amazon Web Services Vietnam\nVị trí thực tập: FCJ Cloud Intern\nThời gian thực tập: Từ ngày 12/08/2025 đến ngày 12/11/2025\nNội dung báo cáo Worklog Proposal Các bài blogs đã dịch Các events đã tham gia Workshop Tự đánh giá Chia sẻ, đóng góp ý kiến "
},
{
	"uri": "https://tuanvu250.github.io/FCJ-Report/vi/3-blogstranslated/3.1-blog1/",
	"title": "Blog 1",
	"tags": [],
	"description": "",
	"content": "Chạy và tối ưu các Small Language Models tại on-premises và tại edge Bởi Chris McEvilly, Fernando Galves Guy Ben Baruchn | Ngày: 23/06/2025\n| In Advanced (300), AWS Outposts, Technical How-to\nKhi bạn chuyển các triển khai generative AI của mình từ giai đoạn prototype sang production, bạn có thể nhận thấy nhu cầu cần chạy các foundation models (FMs) on-premises hoặc at the edge để đáp ứng các yêu cầu về data residency, information security (InfoSec) policy, hoặc low latency. Ví dụ, các khách hàng trong những ngành được quản lý chặt chẽ như financial services, healthcare, và telecom có thể muốn tận dụng các chatbots để hỗ trợ customer queries, tối ưu hóa internal workflows cho các complex reporting, và tự động phê duyệt yêu cầu - đồng thời vẫn giữ dữ liệu trong phạm vi quốc gia. Tương tự, một số tổ chức chọn triển khai các small language models (SLMs) của riêng họ để phù hợp với các yêu cầu InfoSec nội bộ nghiêm ngặt. Ví dụ khác, các nhà sản xuất có thể muốn triển khai SLMs ngay trong nhà máy của họ để phân tích dữ liệu sản xuất và cung cấp chẩn đoán thiết bị theo thời gian thực. Để đáp ứng các nhu cầu về data residency, latency và InfoSec của người dùng, bài viết này cung cấp hướng dẫn về cách triển khai generative AI FMs vào AWS Local Zones và AWS Outposts. Mục tiêu là trình bày một framework giúp chạy nhiều loại SLMs khác nhau nhằm đáp ứng các yêu cầu xử lý dữ liệu tại chỗ dựa trên customer engagements.\nCác tùy chọn triển khai Generative AI Sự phát triển của generative AI trong triển khai và thử nghiệm đã tăng tốc với hai tùy chọn triển khai doanh nghiệp chính. Tùy chọn đầu tiên là sử dụng large language model (LLM) để đáp ứng các nhu cầu của doanh nghiệp. LLMs có tính linh hoạt đáng kinh ngạc: một mô hình duy nhất có thể thực hiện nhiều nhiệm vụ hoàn toàn khác nhau, chẳng hạn như trả lời câu hỏi, viết mã (coding), tóm tắt tài liệu, dịch ngôn ngữ, và tạo nội dung (content generation). LLMs có tiềm năng làm thay đổi cách con người tạo nội dung cũng như cách sử dụng công cụ tìm kiếm và trợ lý ảo. Tùy chọn triển khai thứ hai là sử dụng small language models (SLMs), tập trung vào một use case cụ thể. SLMs là các compact transformer models chủ yếu sử dụng decoder-only hoặc encoder-decoder architectures, thường có ít hơn 20 tỷ parameters, mặc dù định nghĩa này đang phát triển khi các mô hình lớn hơn ra đời. SLMs có thể đạt được hiệu suất tương đương hoặc thậm chí vượt trội khi được fine-tuned cho các domain hoặc task cụ thể, khiến chúng trở thành lựa chọn thay thế tuyệt vời cho các ứng dụng chuyên biệt.\nNgoài ra, SLMs còn mang lại thời gian suy luận (inference time) nhanh hơn, yêu cầu tài nguyên thấp hơn, và phù hợp để triển khai trên nhiều loại thiết bị hơn, đặc biệt hữu ích cho các ứng dụng chuyên biệt và edge computing, nơi không gian và nguồn điện bị giới hạn. Mặc dù SLMs có phạm vi và độ chính xác hạn chế hơn so với LLMs, bạn có thể nâng cao hiệu suất của chúng cho nhiệm vụ cụ thể thông qua Retrieval Augmented Generation (RAG) và fine-tuning. Sự kết hợp này tạo ra một SLM có khả năng trả lời các truy vấn liên quan đến một domain cụ thể với mức độ chính xác tương đương LLM, đồng thời giảm thiểu hiện tượng hallucinations. Nhìn chung, SLMs cung cấp các giải pháp hiệu quả, cân bằng giữa nhu cầu người dùng và hiệu quả chi phí.\nTổng quan kiến trúc Giải pháp được trình bày trong bài viết này sử dụng Llama.cpp, một framework được tối ưu hóa được viết bằng C/C++ nhằm chạy hiệu quả nhiều loại SLMs. Llama.cpp có thể hoạt động hiệu quả trong nhiều môi trường tính toán khác nhau, cho phép generative AI models vận hành trong Local Zones hoặc Outposts mà không cần các cụm GPU lớn (GPU clusters) như thường thấy khi chạy LLMs trong native frameworks của chúng. Framework này mở rộng lựa chọn mô hình và tăng hiệu suất hoạt động khi triển khai SLMs vào Local Zones và Outposts.\nKiến trúc này cung cấp một template cho việc triển khai nhiều loại SLMs nhằm hỗ trợ các use case như chatbot hoặc content generation. Giải pháp bao gồm một front-end application nhận user queries, định dạng các prompts để trình bày cho mô hình và trả về các phản hồi từ mô hình cho người dùng. Để hỗ trợ một giải pháp có khả năng mở rộng (scalable), application servers và Amazon EC2 G4dn GPU-enabled instances được đặt phía sau Application Load Balancer (ALB).\nTrong trường hợp số lượng prompts đến vượt quá khả năng xử lý của SLMs, có thể triển khai message queue ở phía trước SLMs. Ví dụ, bạn có thể triển khai một RabbitMQ cluster để hoạt động như queue manager cho hệ thống.\nHình 1: Architecture overview\nTriển khai giải pháp Các hướng dẫn sau đây mô tả cách khởi chạy một SLM bằng Llama.cpp trong Local Zones hoặc trên Outposts. Mặc dù phần kiến trúc tổng quan trước đó trình bày một giải pháp hoàn chỉnh với nhiều thành phần, bài viết này tập trung cụ thể vào các bước cần thiết để triển khai SLM trong EC2 instance sử dụng Llama.cpp.\nĐiều kiện tiên quyết Để triển khai giải pháp này, bạn cần chuẩn bị các điều kiện sau:\nAWS account đã được allowlisted cho Local Zones, hoặc có một logical Outpost đã được cài đặt, cấu hình và hoạt động.\nQuyền truy cập vào G4dn instances trong tài khoản của bạn tại vị trí đã chọn\n_(kiểm tra trong AWS Service Quotas).\n_\nMột VPC đã được tạo để lưu trữ môi trường triển khai.\nPublic và private subnets để hỗ trợ môi trường trong VPC.\nMột security group được liên kết với EC2 instance của bạn.\nAWS Identity and Access Management (IAM) role với quyền AWS Systems Manager Session Manager permissions.\nHình 1: Architecture overview\n1. Khởi chạy GPU instance cho SLM Đăng nhập vào AWS Management Console, mở Amazon EC2 console,\nvà khởi chạy một g4dn.12xlarge EC2 instance trong Local Zone hoặc Outposts environment của bạn.\nCấu hình bao gồm:\nRed Hat Enterprise Linux 9 (HVM), SSD Volume Type\nPrivate subnet liên kết với Local Zone hoặc Outposts rack\n30 GiB gp2 root volume và thêm 300 GiB gp2 EBS volume\nIAM role đã được cấu hình với các quyền cần thiết cho Systems Manager\nSSM Agent được cài đặt để kết nối tới instance\n(tham khảo hướng dẫn trong Install SSM Agent on RHEL 8.x and 9.x trong Systems Manager User Guide)\nĐể biết hướng dẫn chi tiết về việc khởi chạy EC2 instance, tham khảo: Launch an EC2 instance using the launch instance wizard in the console hoặc Launch an instance on your Outposts rack.\nHình 2: SLM instance launched\n2. Cài đặt NVIDIA drivers Kết nối tới SLM instance bằng Systems Manager.\nBạn có thể làm theo hướng dẫn tại Connect to your Amazon EC2 instance using Session Manager trong Amazon EC2 User Guide.\nCài đặt kernel packages và các công cụ cần thiết:\nsudo su - dnf update -y \u0026lt;br\u0026gt;subscription-manager repos --enable codeready-builder-for-rhel-9-x86_64-rpms dnf install -y \u0026lt;https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm\u0026gt; dnf install -y ccache cmake gcc-c++ git git-lfs htop python3-pip unzip wget dnf install -y dkms elfutils-libelf-devel kernel-devel kernel-modules-extra \\\\ libglvnd-devel vulkan-devel xorg-x11-server-Xorg \u0026lt;br\u0026gt;systemctl enable --now dkms reboot Cài đặt Miniconda3 trong thư mục /opt/miniconda3 hoặc trình quản lý package tương thích khác để quản lý Python dependencies.\nCài đặt NVIDIA drivers:\ndnf config-manager --add-repo \\\\ \u0026lt;http://developer.download.nvidia.com/compute/cuda/repos/rhel9/x86_64/cuda-rhel9.repo\u0026gt; dnf module install -y nvidia-driver:latest-dkms dnf install -y cuda-toolkit echo \u0026#39;export PATH=/usr/local/cuda/bin:\\$PATH\u0026#39; \u0026gt;\u0026gt; ~/.bashrc echo \u0026#39;export LD_LIBRARY_PATH=/usr/local/cuda/lib64:\\$LD_LIBRARY_PATH\u0026#39; \u0026gt;\u0026gt; ~/.bashrc source ~/.bashrc 3. Tải xuống và cài đặt Llama.cpp Tạo và mount filesystem của Amazon EBS volume bạn đã tạo trước đó vào thư mục /opt/slm. Xem hướng dẫn tại Make an Amazon EBS volume available for use trong Amazon EBS User Guide.\nChạy các lệnh sau để tải và cài đặt Llama.cpp:\ncd /opt/slm\rgit clone -b b4942 \\\\\u0026lt;https://github.com/ggerganov/llama.cpp.git\u0026gt;\rcd llama.cpp cmake -B build -DGGML_CUDA=ON\rcmake --build build --config Release -j\\$(nproc) conda install python=3.12\rpip install -r requirements.txt\rpip install nvitop 4. Tải xuống và chuyển đổi SLM model Để chạy SLM hiệu quả với Llama.cpp, bạn cần chuyển đổi model sang định dạng GGUF (GPT-Generated Unified Format). Việc chuyển đổi này giúp tối ưu hiệu năng và mức sử dụng bộ nhớ cho các môi trường edge deployments có tài nguyên giới hạn. GGUF được thiết kế đặc biệt để hoạt động với Llama.cpp inference engine. Các bước sau đây minh họa cách tải SmolLM2 1.7B và chuyển đổi sang định dạng GGUF:\nmkdir /opt/slm/models cd /opt/slm/models git lfs install git clone \u0026lt;https://huggingface.co/HuggingFaceTB/SmolLM2-1.7B-Instruct\u0026gt; cd /opt/slm/llama.cpp python3 convert_hf_to_gguf.py --outtype f16 \\\\ --outfile /opt/slm/llama.cpp/models/SmolLM2-1.7B-Instruct-f16.gguf \\\\ /opt/slm/models/SmolLM2-1.7B-Instruct echo \u0026#39;export PATH=/opt/slm/llama.cpp/build/bin:\\$PATH\u0026#39; \u0026gt;\u0026gt; ~/.bashrc echo \u0026#39;export LD_LIBRARY_PATH=/opt/slm/llama.cpp/build/bin:\\$LD_LIBRARY_PATH\u0026#39; \u0026gt;\u0026gt; ~/.bashrc source ~/.bashrc Bạn cũng có thể tải các models khác được công khai từ Hugging Face nếu cần,\nvà thực hiện quá trình chuyển đổi tương tự.\nSLM Operation and Optimization Việc triển khai SLMs thông qua Llama.cpp mang lại tính linh hoạt cao trong vận hành, cho phép tùy chỉnh môi trường và tối ưu hóa theo các use case cụ thể. Với Llama.cpp, bạn có thể chọn nhiều tham số khác nhau để tối ưu việc sử dụng tài nguyên hệ thống và hoạt động của mô hình, giúp tận dụng hiệu quả tài nguyên mà không tiêu tốn không cần thiết hoặc ảnh hưởng đến hiệu suất. Các tham số phổ biến khi chạy Llama.cpp giúp kiểm soát cách mô hình hoạt động bao gồm:\n-ngl N, \u0026ndash;n-gpu-layers N: Khi biên dịch với GPU support, tùy chọn này cho phép chuyển một số layer sang GPU để tính toán, giúp tăng hiệu suất xử lý. -t N, \u0026ndash;threads N: Xác định số lượng threads sử dụng trong quá trình sinh nội dung. Để đạt hiệu suất tối ưu, nên đặt giá trị này bằng số lõi CPU vật lý có trong hệ thống. -n N, \u0026ndash;n-predict N: Xác định số lượng tokens cần sinh ra khi tạo văn bản.\nĐiều chỉnh giá trị này sẽ ảnh hưởng đến độ dài đầu ra của văn bản. -sm, \u0026ndash;split-mode: Xác định cách chia mô hình giữa nhiều GPU khi chạy trong môi trường multi-GPU. Nên thử \u0026ldquo;row\u0026rdquo; splitting mode, vì trong một số trường hợp, nó mang lại hiệu suất tốt hơn so với chia theo layer-based mặc định. --temp N: Temperature điều khiển mức độ ngẫu nhiên trong đầu ra của SLM. Giá trị thấp hơn (ví dụ 0.2-0.5) tạo ra câu trả lời nhất quán và xác định hơn, giá trị cao hơn (ví dụ 0.9-1.2) giúp mô hình sáng tạo và đa dạng hơn (mặc định: 0.88) -s SEED, \u0026ndash;seed SEED: Cung cấp phương pháp kiểm soát ngẫu nhiên của mô hình. Việc đặt seed cố định giúp tái tạo kết quả nhất quán trong nhiều lần chạy (mặc định: -1, -1 = random seed). -c, \u0026ndash;ctx-size N: Xác định context size, số lượng tokens mà FM có thể xử lý trong một prompt. Giá trị này ảnh hưởng đến mức RAM cần thiết và độ chính xác của mô hình. Ví dụ: với Phi-3, khuyến nghị giảm context size còn 8k hoặc 16k để tối ưu hiệu suất. Lệnh mẫu: \u0026ndash;ctx-size XXXX trong đó XXXX là context size. Phần này minh họa cách tối ưu hóa hiệu suất SLM cho các use case cụ thể bằng Llama.cpp, gồm hai kịch bản phổ biến: Chatbot interactions và Text summarization\nChatbot Use Case Example Token Size Requirements Đối với ứng dụng chatbot, kích thước token thông thường: Input: khoảng 50-150 tokens, hỗ trợ người dùng hỏi 1-2 câu và Output: khoảng 100-300 tokens, giúp mô hình phản hồi ngắn gọn nhưng chi tiết.\nSample Command ./build/bin/llama-cli -m ./models/SmolLM2-1.7B-Instruct-f16.gguf \\\\ -ngl 99 -n 512 --ctx-size 8192 -sm row --temp 0\r--single-turn \\\\ -sys \u0026#34;You are a helpful assistant\u0026#34; -p \u0026#34;Hello\u0026#34; Hình 3: Chatbot example\nCommand Explanation -m ./models/SmolLM2-1.7B-Instruct-f16.gguf : Chỉ định file model sử dụng -ngl 99 : Gán 99 GPU layers để đạt hiệu suất tối ưu -n 512 : Tối đa 512 output tokens (đủ cho 100-300 tokens cần thiết) --ctx-size 8192 : Đặt kích thước context window để xử lý hội thoại phức tạp -sm row : Chia hàng across GPUs --temp 0 : Đặt temperature bằng 0 để giảm tính sáng tạo --single-turn : Tối ưu cho các phản hồi một lượt -sys \u0026ldquo;You are a helpful assistant\u0026rdquo; : Thiết lập system prompt định nghĩa vai trò trợ lý -p \u0026ldquo;Hello\u0026rdquo; : Nhập prompt của người dùng Text Summarization Example Dòng lệnh dưới đây cho thấy SmolLM2-1.7B chạy tác vụ tóm tắt văn bản:\nPROMPT_TEXT=\u0026#34;Summarize the following text: Amazon DynamoDB is a serverless, NoSQL database service that allows you to develop modern applications at any scale. As a serverless database, you only pay for what you use and DynamoDB scales to zero, has no cold starts, no version upgrades, no maintenance windows, no patching, and no downtime maintenance. DynamoDB offers a broad set of security controls and compliance standards. For globally distributed applications, DynamoDB global tables is a multi-Region, multi-active database with a 99.999% availability SLA and increased resilience. DynamoDB reliability is supported with managed backups, point-in-time recovery, and more. With DynamoDB streams, you can build serverless event-driven applications.\u0026#34; ./build/bin/llama-cli -m ./models/SmolLM2-1.7B-Instruct-f16.gguf \\\\ -ngl 99 -n 512 --ctx-size 8192 -sm row --single-turn \\\\ -sys \u0026#34;You are a technical writer\u0026#34; \\\\ --prompt \u0026#34;\\$PROMPT_TEXT\u0026#34; Hình 4: Summarization example\nCleaning Up Để tránh chi phí phát sinh không cần thiết, hãy thực hiện các bước sau để xóa tài nguyên sau khi hoàn tất:\nTerminate EC2 instance để ngừng tính phí. Xác minh rằng EBS volume 300 GiB đã được xóa đúng cách bằng cách kiểm tra mục Volumes trong phần Elastic Block Store.Nếu vẫn còn volume, hãy chọn và thực hiện: Actions \u0026gt; Delete volume. Kết luận Bài viết này đã hướng dẫn bạn từng bước triển khai SLMs vào môi trường AWS on-premises hoặc edge nhằm đáp ứng các nhu cầu xử lý dữ liệu cục bộ. Phần đầu bài viết đã thảo luận về lợi ích kinh doanh của SLMs, bao gồm: Thời gian suy luận (inference time) nhanh hơn, Giảm chi phí vận hành và cải thiện kết quả đầu ra của mô hình. Các SLMs được triển khai bằng Llama.cpp và tối ưu hóa cho các use case cụ thể có thể cung cấp dịch vụ người dùng hiệu quả từ edge theo cách mở rộng linh hoạt (scalable). Các tham số tối ưu hóa được mô tả trong bài viết này cung cấp nhiều phương pháp cấu hình khác nhau để điều chỉnh mô hình cho các kịch bản triển khai đa dạng. Bạn có thể làm theo các bước và kỹ thuật được trình bày trong bài để triển khai generative AI phù hợp với yêu cầu về data residency, latency, hoặc InfoSec compliance, đồng thời vận hành hiệu quả trong giới hạn tài nguyên của môi trường edge computing. Để tìm hiểu thêm, hãy truy cập AWS Local Zones và AWS Outposts.\n"
},
{
	"uri": "https://tuanvu250.github.io/FCJ-Report/vi/3-blogstranslated/3.2-blog2/",
	"title": "Blog 2",
	"tags": [],
	"description": "",
	"content": "Hội nghị AWS EUC New York Summit: EUC201 - The AI Advantage: Unlocking the full potential of your EUC Services Bởi Dave Jaskie và Matt Aylward | ngày 27/06/2025 | Amazon AppStream 2.0, Amazon Bedrock, Amazon Bedrock Agents, Amazon CloudWatch, Amazon WorkSpaces, Desktop \u0026amp; Application Streaming, End User Computing.\nBạn có đang tìm cách ứng dụng AI để tối ưu các tác vụ quản trị và nâng cao năng suất người dùng không?\nTrong bối cảnh kỹ thuật số liên tục phát triển, thành công của chiến lược End-User Computing (EUC) của doanh nghiệp phụ thuộc vào khả năng người dùng cuối tiếp cận và sử dụng dịch vụ hiệu quả.\nPhiên thảo luận tương tác này sẽ trình bày cách bạn có thể tận dụng AI agentic của Amazon Bedrock kết hợp với Amazon WorkSpaces và Amazon CloudWatch.\nNhững công cụ này giúp tự động hóa các tác vụ quản trị và cung cấp thông tin chi tiết có thể hành động (actionable insights) từ các metrics và logs quan trọng.\nTrong buổi học, người tham dự sẽ được giới thiệu các chiến lược EUC quan trọng và học cách AI có thể chuyển đổi quy trình làm việc của họ. Bạn sẽ khám phá cách Amazon Bedrock giúp đơn giản hóa các quy trình phức tạp, mang đến cho quản trị viên các công cụ cần thiết để tăng hiệu suất. Ngoài ra, các bài thực hành (hands-on) cùng Amazon CloudWatch sẽ giúp bạn học cách thu thập dữ liệu quan trọng - bao gồm user connectivity, platforms, và IP addresses. Thông qua Amazon Bedrock, bạn sẽ phân tích dữ liệu để rút ra các thông tin giúp tối ưu hoạt động người dùng cuối.\nPhiên này không chỉ mang lại kiến thức chuyên sâu, mà còn là trải nghiệm học tập thực tế. Người tham dự sẽ có hiểu biết rõ ràng về cách tích hợp AI và CloudWatch vào framework hiện có. Dù bạn là IT professional, system administrator, hay decision-maker, đây là cơ hội để nâng cao chiến lược EUC của bạn và đảm bảo cả admin lẫn người dùng đều hưởng lợi từ các công cụ và quy trình tối ưu hóa.\nBuổi builders session này diễn ra vào ngày 16 tháng 7, lúc 9:15 AM EDT, tại Javits Convention Center. Vui lòng thêm buổi này vào lịch trình của bạn qua liên kết sau khi đăng ký.\nĐừng bỏ lỡ cơ hội thay đổi cách bạn tiếp cận end-user computing. Hãy tham gia để khai phá tiềm năng của AI, tự động hóa với sự tự tin, và nắm bắt insights giúp tổ chức của bạn tiến xa hơn. Đăng ký ngay hôm nay!\nDave Jaskie có 15 năm kinh nghiệm trong lĩnh vực End User Computing. Ngoài công việc, Dave thích du lịch và leo núi cùng vợ và 4 người con. Matt Aylward là Solutions Architect tại Amazon Web Services (AWS), chuyên tạo ra các giải pháp đơn giản cho những thách thức kinh doanh phức tạp. Trước khi gia nhập AWS, Matt đã làm việc trong lĩnh vực triển khai hạ tầng, kiểm thử khôi phục sau thảm họa, và quản lý phân phối ứng dụng ảo. Ngoài giờ làm, anh thích dành thời gian cho gia đình, xem phim, và đi dã ngoại cùng chú chó năng động của mình. "
},
{
	"uri": "https://tuanvu250.github.io/FCJ-Report/vi/3-blogstranslated/3.3-blog3/",
	"title": "Blog 3",
	"tags": [],
	"description": "",
	"content": "Cách thiết lập cảnh báo tự động cho các AWS Savings Plans mới mua Bởi Syed Muhammad Tawha và Dan Johns | ngày 26/06/2025 | Amazon Simple Notification Service (SNS), AWS Cloud Financial Management, AWS CloudFormation, Cloud Cost Optimization\nKhi tổ chức phát triển, các nhóm FinOps cần một cái nhìn tổng thể về AWS Savings Plans để tối ưu hóa việc sử dụng. Giải pháp này giúp giám sát tự động và thiết lập cảnh báo nhằm phát hiện các Savings Plans sử dụng kém hiệu quả trong thời hạn hoàn trả hợp lệ.\nKhi mua Savings Plan, bạn cam kết sử dụng trong 1 hoặc 3 năm. Các Savings Plan có cam kết theo giờ ≤ $100 có thể được hoàn trả nếu được mua trong vòng 7 ngày gần nhất và trong cùng tháng dương lịch, miễn là bạn chưa vượt quá giới hạn hoàn trả. Sau khi tháng kết thúc (theo UTC), Savings Plans đó không thể hoàn trả.\nỞ bài viết này, chúng tôi cung cấp các AWS CloudFormation templates giúp tạo AWS Step Functions state machine, Amazon Simple Notification Service (SNS) topic, Amazon EventBridge scheduler, và các AWS Identity and Access Management (IAM) roles cần thiết để giám sát tự động các Savings Plans mới mua và phát hiện những gói sử dụng thấp.\nTổng quan giải pháp Giải pháp này tuân theo AWS security best practices bằng cách tách triển khai trên hai tài khoản. Một CloudFormation stack sẽ được tạo trong Management account để thiết lập các IAM roles cần thiết để truy xuất dữ liệu sử dụng của Savings Plans. Một CloudFormation stack khác sẽ được triển khai trong Member Account đã chọn trong AWS Organization của bạn.\nCloudFormation stack trong Member Account tạo một state machine thực hiện assume role trong Management Account của bạn và phân tích tất cả Savings Plans trong Management Account, bao gồm cả những gói đã được mua trong toàn bộ tổ chức của bạn. Workflow lọc các Savings Plans hoạt động theo ngày mua, tập trung vào các plan được mua trong 7 ngày gần nhất và tháng hiện tại. Sau đó, hệ thống đánh giá tỷ lệ sử dụng của chúng và xác định các plan dưới ngưỡng định sẵn.\nState machine sẽ thực thi theo tần suất bạn chỉ định và sử dụng Amazon SNS để gửi cảnh báo qua email đến các địa chỉ bạn cung cấp khi tạo CloudFormation stack. Các cảnh báo này sẽ chứa thông tin chi tiết về các Savings Plans sử dụng thấp và hướng dẫn về quy trình hoàn trả.\nHình 1: Kiến trúc AWS - Member Account nhận quyền đọc dữ liệu từ Management Account và kích hoạt Step Function để gửi cảnh báo qua SNS.\nTriển khai giải pháp Điều kiện tiên quyết Có AWS Account\nCó IAM permissions để tạo CloudFormation Stack và IAM Role trong Management Account\nCó IAM permissions để tạo Step Functions, SNS, IAM Roles, và EventBridge trong Member Account\nTriển khai giải pháp Trong phần này, chúng ta sẽ triển khai các tài nguyên cho giải pháp này trong tài khoản của bạn:\nPhần 1 - Triển khai trong Member Account Trong phần này, chúng ta sẽ triển khai các tài nguyên cho giải pháp này trong Member Account đã chọn.\nĐăng nhập vào AWS Management Console của Member Account nơi bạn muốn triển khai giải pháp.\nTriển khai CloudFormation Stack này Launch Stack\nCung cấp Stack Name là new-sp-utilization-alert-member.\nTrong tham số AlertEmails, nhập danh sách email cách nhau bởi dấu phẩy mà sẽ nhận thông báo về Savings Plans sử dụng kém.\nTrong tham số ManagementAccountId, nhập 12 chữ số AWS Account ID của Management Account.\nTrong tham số ScheduleExpression, chỉ định tần suất thực thi cho Step Functions state machine theo định dạng cron (mặc định là hàng ngày vào lúc 9 AM UTC).\nTrong tham số UtilizationThreshold, chỉ định tỷ lệ sử dụng tối thiểu cho Savings Plans của bạn. Bạn sẽ nhận thông báo khi tỷ lệ sử dụng giảm dưới ngưỡng này.\nNhấn Next, chọn ô acknowledgment, và tạo stack.\nChờ cho đến khi stack hoàn thành và hiển thị trạng thái CREATE-COMPLETE.\nBạn sẽ nhận một email để xác nhận đăng ký nhận thông báo từ SNS topic do stack này tạo. Vui lòng xác nhận đăng ký để bắt đầu nhận thông báo.\nTruy cập vào tab Outputs của stack vừa tạo và ghi lại các giá trị của ExecutionRoleArn và StateMachineArn, bạn sẽ cần chúng trong phần tiếp theo.\nPhần 2 - Triển khai trong Management Account Đăng nhập vào AWS Management Console. Lưu ý: Đây phải là tài khoản giống như tài khoản đã nhập trong tham số ManagementAccountId ở phần trước.\nTriển khai CloudFormation Stack này Launch Stack\nCung cấp Stack Name là new-sp-utilization-alert-management.\nTrong tham số ExecutionRoleArn, cung cấp giá trị đã sao chép từ stack outputs của stack đã triển khai trong Member Account.\nTrong tham số StateMachineArn, cung cấp giá trị đã sao chép từ stack outputs của stack đã triển khai trong Member Account.\nNhấn Next, chọn ô acknowledgment, và tạo stack.\nChờ cho đến khi stack hoàn thành và hiển thị trạng thái CREATE-COMPLETE.\nKiểm thử giải pháp Bây giờ mà Step Functions state machine và các tài nguyên liên quan đã được triển khai trong Member Account, chúng ta sẽ kiểm tra việc triển khai:\nĐăng nhập lại vào AWS Management Console của Member Account nơi bạn đã triển khai phần 1 của giải pháp này.\nTruy cập vào tab Resources trong CloudFormation stack và tìm SavingsPlansAlerts Step Functions state machine. Nhấp vào hyperlink màu xanh dương.\nBạn sẽ được chuyển hướng đến Step Functions console. Nhấn Start execution ở bên phải.\nXem chi tiết execution trong mục Events để theo dõi tiến trình của state machine. Nếu có Savings Plans được mua trong vòng 7 ngày gần nhất và tháng hiện tại, bạn sẽ nhận email thông báo.\nMột execution thành công được hiển thị bằng ô màu xanh lá trong Graph view. Nếu bất kỳ Savings Plans nào rơi dưới ngưỡng tỷ lệ sử dụng đã chỉ định, bạn sẽ nhận email tại địa chỉ đã cung cấp.\nDọn dẹp tài nguyên Tất cả các tài nguyên đã triển khai cho giải pháp này có thể được xóa bằng cách xóa CloudFormation stacks. Bạn có thể xóa stack thông qua AWS Management Console hoặc AWS CLI.\nĐể xóa stack trong Management Account (CLI):\naws cloudformation delete-stack --stack-name new-sp-utilization-alert_management Để xóa stack trong Member Account (CLI):\naws cloudformation delete-stack --stack-name new-sp-utilization-alert_member Hiểu và xử lý cảnh báo Khi bạn nhận được cảnh báo về Savings Plans sử dụng thấp, bạn nên xem lại chi tiết sử dụng được cung cấp trong thông báo email. Phân tích các chỉ số sử dụng của bạn so với cam kết ban đầu khi mua Savings Plan, và điều tra xem tỷ lệ sử dụng thấp có phải là điều đã dự kiến hay do các yếu tố khác như di chuyển khối lượng công việc, thay đổi kiến trúc, hoặc ước tính sai nhu cầu công suất. Hãy cân nhắc hoàn trả Savings Plan nếu tỷ lệ sử dụng vẫn duy trì dưới ngưỡng của bạn, plan được mua trong vòng 7 ngày gần nhất, mua trong tháng hiện tại, và cam kết mỗi giờ ≤ $100. Ghi lại lý do hoàn trả để tham khảo và lập kế hoạch cho tương lai.\nKết luận Bài viết đã hướng dẫn cách sử dụng Savings Plan và Cost Explorer APIs để xác định Savings Plans sử dụng thấp trong tổ chức của bạn. Sau đó, chúng tôi đã minh họa cách sử dụng Step Functions State Machine để lọc các Savings Plans được mua trong 7 ngày gần nhất và tháng hiện tại, điều này rất quan trọng vì bạn có thể hoàn trả Savings Plans trong thời gian hoàn trả hợp lệ nếu chúng không được sử dụng hiệu quả. Để biết thêm chi tiết về việc hoàn trả Savings Plan, tham khảo tài liệu Returning a Purchased Savings Plan\nSyed Muhammad Tawha Syed Muhammad Tawha là Principal Technical Account Manager tại AWS, có trụ sở tại Dublin, Ireland. Tawha chuyên môn về Storage, Resilience và Cloud Cost Optimization. Anh đam mê giúp đỡ khách hàng của AWS tối ưu hóa chi phí và cải thiện hiệu suất. Ngoài công việc, Tawha còn yêu thích dành thời gian với bạn bè và gia đình Dan Johns Dan Johns là Senior Solutions Architect Engineer, hỗ trợ khách hàng xây dựng trên AWS và đáp ứng các yêu cầu kinh doanh. Ngoài công việc, anh thích đọc sách, dành thời gian với gia đình và tự động hóa các tác vụ trong nhà. "
},
{
	"uri": "https://tuanvu250.github.io/FCJ-Report/vi/5-workshop/5.4-s3-onprem/5.4.1-prepare/",
	"title": "Chuẩn bị tài nguyên",
	"tags": [],
	"description": "",
	"content": "Để chuẩn bị cho phần này của workshop, bạn sẽ cần phải:\nTriển khai CloudFormation stack Sửa đổi bảng định tuyến VPC. Các thành phần này hoạt động cùng nhau để mô phỏng DNS forwarding và name resolution.\nTriển khai CloudFormation stack Mẫu CloudFormation sẽ tạo các dịch vụ bổ sung để hỗ trợ mô phỏng môi trường truyền thống:\nMột Route 53 Private Hosted Zone lưu trữ các bản ghi Bí danh (Alias records) cho điểm cuối PrivateLink S3 Một Route 53 Inbound Resolver endpoint cho phép \u0026ldquo;VPC Cloud\u0026rdquo; giải quyết các yêu cầu resolve DNS gửi đến Private Hosted Zone Một Route 53 Outbound Resolver endpoint cho phép \u0026ldquo;VPC On-prem\u0026rdquo; chuyển tiếp các yêu cầu DNS cho S3 sang \u0026ldquo;VPC Cloud\u0026rdquo; Click link sau để mở AWS CloudFormation console. Mẫu yêu cầu sẽ được tải sẵn vào menu. Chấp nhận tất cả mặc định và nhấp vào Tạo stack. Có thể mất vài phút để triển khai stack hoàn tất. Bạn có thể tiếp tục với bước tiếp theo mà không cần đợi quá trình triển khai kết thúc.\nCập nhật bảng định tuyến private on-premise Workshop này sử dụng StrongSwan VPN chạy trên EC2 instance để mô phỏng khả năng kết nối giữa trung tâm dữ liệu truyền thống và môi trường cloud AWS. Hầu hết các thành phần bắt buộc đều được cung cấp trước khi bạn bắt đầu. Để hoàn tất cấu hình VPN, bạn sẽ sửa đổi bảng định tuyến \u0026ldquo;VPC on-prem\u0026rdquo; để hướng lưu lượng đến cloud đi qua StrongSwan VPN instance.\nMở Amazon EC2 console\nChọn instance tên infra-vpngw-test. Từ Details tab, copy Instance ID và paste vào text editor của bạn để sử dụng ở những bước tiếp theo\nĐi đến VPC menu bằng cách gõ \u0026ldquo;VPC\u0026rdquo; vào Search box\nClick vào Route Tables, chọn RT Private On-prem route table, chọn Routes tab, và click Edit Routes.\nClick Add route. Destination: CIDR block của Cloud VPC Target: ID của infra-vpngw-test instance (bạn đã lưu lại ở bước trên) Click Save changes "
},
{
	"uri": "https://tuanvu250.github.io/FCJ-Report/vi/4-eventparticipated/4.1-event1/",
	"title": "Event 1",
	"tags": [],
	"description": "",
	"content": "Bài thu hoạch “Gen AI \u0026amp; Data” Mục Đích Của Sự Kiện Cập nhật xu hướng và chiến lược GenAI trên AWS Tìm hiểu xây dựng nền tảng dữ liệu hợp nhất phục vụ AI/Analytics Giới thiệu AI-Driven Development Lifecycle (AI-DLC) trong phát triển phần mềm Học hỏi về bảo mật cho ứng dụng GenAI và AI Agent trong doanh nghiệp Danh Sách Diễn Giả Jun Kai Loke – AI/ML Specialist SA, AWS Kien Nguyen – Solutions Architect, AWS Tamelly Lim – Storage Specialist SA, AWS Binh Tran – Senior Solutions Architect, AWS Taiki Dang – Solutions Architect, AWS Michael Armentano – Principal WW GTM Specialist, AWS Nội Dung Nổi Bật 1. Xây dựng Nền tảng Dữ liệu Thống nhất trên AWS cho AI \u0026amp; Analytics Chiến lược xây dựng nền tảng dữ liệu hợp nhất, mở rộng, phục vụ AI/Analytics. Luồng dữ liệu end-to-end: ingestion → lưu trữ → xử lý → truy cập → governance. Khắc phục 3 silo (Data/People/Business); self-service + chuẩn hóa quản trị. Dịch vụ trọng tâm: S3, Glue, Redshift, Lake Formation, OpenSearch, Kinesis/MSK. 2. Xây dựng Tương lai: Chiến lược Áp dụng GenAI trên AWS Tầm nhìn \u0026amp; xu hướng GenAI; lộ trình áp dụng trong doanh nghiệp. Amazon Bedrock: chọn model, tùy chỉnh/RAG, guardrails, tối ưu chi phí/độ trễ. AgentCore: runtime độc lập framework, gateway tích hợp công cụ, identity/observability. Amazon Nova và hệ sinh thái frameworks (CrewAI, LangGraph, LlamaIndex, Strands). 3. Bảo mật Ứng dụng Trí tuệ Nhân tạo Sinh tạo với AWS Rủi ro theo OWASP LLM (LLM01/02), kiểm soát đầu ra an toàn. Bảo mật theo lớp: hạ tầng, mô hình, ứng dụng; IAM, mã hóa, zero-trust, giám sát liên tục. 5 trụ cột bảo mật: Compliance \u0026amp; Governance, Legal \u0026amp; Privacy, Controls, Risk Management, Resilience. Generative AI Security Scoping Matrix (Scope 1 → 5): từ consumer apps đến self-trained models. Bedrock Guardrails: lọc nội dung nhạy cảm với ngưỡng cấu hình. Human-in-the-loop: con người phê duyệt/can thiệp khi cần. Observability (OpenTelemetry): giám sát, log, trace minh bạch hành vi AI. 4. Vượt xa Tự động hóa: AI Agents như Công cụ Nhân Năng suất Agentic AI: từ assistant → multi-agent systems; giảm giám sát, tăng tự chủ. Ứng dụng: hỗ trợ khách hàng, BI với Amazon Q (QuickSight), tự động hóa quy trình. Amazon Q in QuickSight: Build Dashboards/Reports, Data Q\u0026amp;A, Executive Summaries. Giá trị kỳ vọng: năng suất vượt bậc; yêu cầu nền tảng dữ liệu \u0026amp; governance vững chắc. 5. Độ Tin cậy và Tính đúng đắn của GenAI Vấn đề hallucination → giảm thiểu qua: Prompt Engineering, RAG, Fine-tuning, Parameter Tuning. RAG in action: user input → embedding → context → LLM → response. 6. Vòng đời Phát triển Hướng dẫn bởi AI (AI-DLC) Vòng đời AI-centric: Inception → Construction → Operation. Tiến hóa: AI-Assisted → AI-Driven → AI-Managed; AI điều phối, con người phê duyệt. Hạ tầng triển khai: IaC, test tự động, quan sát và quản trị rủi ro. 7. Amazon SageMaker (Unified Studio – thế hệ mới) Một môi trường hợp nhất cho data, analytics, và AI: SQL analytics, data processing, model dev/training, GenAI app dev, BI, streaming, search analytics. Lakehouse + Governance: catalog/lineage, policy-based access, auditing; quản trị Data \u0026amp; AI đồng nhất. Zero-ETL integration: lõi S3 ↔ Redshift, kết nối Aurora, DynamoDB, RDS, OpenSearch, Kinesis/MSK, Salesforce, SAP, ServiceNow. MLOps đầy đủ: pipelines/experiments, model registry, deployment endpoints, Feature Store, monitoring. Tích hợp Bedrock \u0026amp; JumpStart: dùng Foundation Models (qua Bedrock), mẫu tham chiếu \u0026amp; tăng tốc triển khai trên SageMaker. Những Gì Học Được Tư Duy Thiết K Kế Business-first approach: Luôn bắt đầu từ nhu cầu kinh doanh thay vì chỉ tập trung vào công nghệ. Ubiquitous language: Tầm quan trọng của ngôn ngữ chung giữa business và kỹ thuật, đặc biệt khi trao đổi với mentor/team. Bounded contexts: Hiểu cách chia nhỏ domain, tránh phức tạp hóa khi mở rộng hệ thống. Kiến Trúc \u0026amp; Công Nghệ Xây dựng Data Foundation hợp nhất: Ingestion → Lưu trữ → Xử lý → Truy cập → Governance. GenAI trên AWS: Bedrock (model choice, guardrails, RAG), AgentCore (runtime, gateway, identity, observability), Nova LLMs. AI Agents: Từ assistant → multi-agent systems; ứng dụng thực tế như customer support, BI với Amazon Q. AI-DLC: Vòng đời phát triển có AI làm trung tâm (Inception → Construction → Operation). Security-first mindset: Guardrails, human-in-the-loop, tuân thủ \u0026amp; giám sát (OpenTelemetry). Chiến Lược \u0026amp; Ứng Dụng Phased approach: Không vội vàng, cần roadmap rõ ràng cho hiện đại hóa và áp dụng AI. Zero-ETL \u0026amp; Unified Studio (SageMaker): Giảm phức tạp trong tích hợp dữ liệu, quản lý lifecycle AI tập trung. ROI measurement: Không chỉ cost saving mà còn agility, productivity. Ứng Dụng Vào Công Việc Cá Nhân Trong dự án:\nCó thể thử áp dụng AI Agent để hỗ trợ quy trình đăng ký/đăng nhập hoặc customer support. Sử dụng validation/guardrails để tăng tính an toàn khi tích hợp GenAI vào app. Trong học tập \u0026amp; team project (Sprint 0, serverless vs containerization):\nÁp dụng kiến thức AI-DLC để chia task hợp lý: AI hỗ trợ nghiên cứu/tạo code, team review \u0026amp; approve. Hiểu khi nào nên dùng Lambda (serverless) và khi nào cần container (ECS/Fargate). Trong vai trò học việc:\nNhận ra cần business-first approach khi viết tài liệu/thu thập yêu cầu. Thấy rõ tầm quan trọng của data foundation để bất kỳ ứng dụng GenAI nào hoạt động đúng và có giá trị. Trải Nghiệm Trong Event Học hỏi trực tiếp từ các chuyên gia AWS về Data, GenAI adoption, Security, AI Agents, AI-DLC. Slide và case study giúp mình hình dung rõ AgentCore hoạt động thế nào trong thực tế. Thấy được cách AWS định hình tương lai phát triển phần mềm: AI không chỉ hỗ trợ mà trở thành một phần của lifecycle. Cảm nhận rõ ràng rằng để ứng dụng GenAI hiệu quả, phải có nền tảng dữ liệu tốt + bảo mật nghiêm ngặt + chiến lược áp dụng bài bản. Bài Học Rút Ra AI Agents và AgentCore sẽ sớm trở thành phần quan trọng trong ứng dụng doanh nghiệp → mình cần học sớm để đi trước. Data platform \u0026amp; governance là chìa khóa → không chỉ code, mà còn quản lý dữ liệu đúng cách. AI-DLC cho thấy vai trò của AI trong SDLC tương lai → có thể thử áp dụng dần trong project nhỏ. Security không chỉ là add-on, mà phải thiết kế ngay từ đầu khi làm với GenAI. Một số hình ảnh khi tham gia sự kiện Thêm các hình ảnh của các bạn tại đây Tổng thể, sự kiện không chỉ cung cấp kiến thức kỹ thuật mà còn giúp tôi thay đổi cách tư duy về thiết kế ứng dụng, hiện đại hóa hệ thống và phối hợp hiệu quả hơn giữa các team.\n"
},
{
	"uri": "https://tuanvu250.github.io/FCJ-Report/vi/5-workshop/5.1-workshop-overview/",
	"title": "Giới thiệu",
	"tags": [],
	"description": "",
	"content": "Giới thiệu về VPC Endpoint Điểm cuối VPC (endpoint) là thiết bị ảo. Chúng là các thành phần VPC có thể mở rộng theo chiều ngang, dự phòng và có tính sẵn sàng cao. Chúng cho phép giao tiếp giữa tài nguyên điện toán của bạn và dịch vụ AWS mà không gây ra rủi ro về tính sẵn sàng. Tài nguyên điện toán đang chạy trong VPC có thể truy cập Amazon S3 bằng cách sử dụng điểm cuối Gateway. Interface Endpoint PrivateLink có thể được sử dụng bởi tài nguyên chạy trong VPC hoặc tại TTDL. Tổng quan về workshop Trong workshop này, bạn sẽ sử dụng hai VPC.\n\u0026ldquo;VPC Cloud\u0026rdquo; dành cho các tài nguyên cloud như Gateway endpoint và EC2 instance để kiểm tra. \u0026ldquo;VPC On-Prem\u0026rdquo; mô phỏng môi trường truyền thống như nhà máy hoặc trung tâm dữ liệu của công ty. Một EC2 Instance chạy phần mềm StrongSwan VPN đã được triển khai trong \u0026ldquo;VPC On-prem\u0026rdquo; và được cấu hình tự động để thiết lập đường hầm VPN Site-to-Site với AWS Transit Gateway. VPN này mô phỏng kết nối từ một vị trí tại TTDL (on-prem) với AWS cloud. Để giảm thiểu chi phí, chỉ một phiên bản VPN được cung cấp để hỗ trợ workshop này. Khi lập kế hoạch kết nối VPN cho production workloads của bạn, AWS khuyên bạn nên sử dụng nhiều thiết bị VPN để có tính sẵn sàng cao. "
},
{
	"uri": "https://tuanvu250.github.io/FCJ-Report/vi/1-worklog/",
	"title": "Nhật ký công việc",
	"tags": [],
	"description": "",
	"content": "Trong trang này bạn sẽ cần giới thiệu worklog của bạn như thế nào? Bạn hoàn thành chương trình trong vòng bao nhiêu tuần? Bạn đã làm gì trong các tuần đó?\nThông thường và cũng là tiêu chuẩn, một worklog được thực hiện trong khoảng 3 tháng (trong suốt thời gian thực tập) với nội dung các tuần như sau:\nTuần 1: Làm quen với AWS và các dịch vụ cơ bản trong AWS\nTuần 2: AWS Transit Gateway, Compute VM Services và tham dự Vietnam Cloud Day 2025\nTuần 3: AWS Storage Services, AWS Backup, VM Import/Export và FSx Windows\nTuần 4: Làm công việc C\u0026hellip;\nTuần 5: Làm công việc D\u0026hellip;\nTuần 6: Làm công việc E\u0026hellip;\nTuần 7: Làm công việc G\u0026hellip;\nTuần 8: Làm công việc H\u0026hellip;\nTuần 9: Làm công việc I\u0026hellip;\nTuần 10: Làm công việc L\u0026hellip;\nTuần 11: Làm công việc M\u0026hellip;\nTuần 12: Làm công việc N\u0026hellip;\n"
},
{
	"uri": "https://tuanvu250.github.io/FCJ-Report/vi/5-workshop/5.3-s3-vpc/5.3.1-create-gwe/",
	"title": "Tạo một Gateway Endpoint",
	"tags": [],
	"description": "",
	"content": " Mở Amazon VPC console Trong thanh điều hướng, chọn Endpoints, click Create Endpoint: Bạn sẽ thấy 6 điểm cuối VPC hiện có hỗ trợ AWS Systems Manager (SSM). Các điểm cuối này được Mẫu CloudFormation triển khai tự động cho workshop này.\nTrong Create endpoint console: Đặt tên cho endpoint: s3-gwe Trong service category, chọn aws services Trong Services, gõ \u0026ldquo;s3\u0026rdquo; trong hộp tìm kiếm và chọn dịch vụ với loại gateway Đối với VPC, chọn VPC Cloud từ drop-down menu. Đối với Route tables, chọn bảng định tuyến mà đã liên kết với 2 subnets (lưu ý: đây không phải là bảng định tuyến chính cho VPC mà là bảng định tuyến thứ hai do CloudFormation tạo). Đối với Policy, để tùy chọn mặc định là Full access để cho phép toàn quyền truy cập vào dịch vụ. Bạn sẽ triển khai VPC endpoint policy trong phần sau để chứng minh việc hạn chế quyền truy cập vào S3 bucket dựa trên các policies. Không thêm tag vào VPC endpoint. Click Create endpoint, click x sau khi nhận được thông báo tạo thành công. "
},
{
	"uri": "https://tuanvu250.github.io/FCJ-Report/vi/1-worklog/1.8-week8/",
	"title": "Worklog Tuần 8",
	"tags": [],
	"description": "",
	"content": "\r⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nMục tiêu tuần 8: Kết nối, làm quen với các thành viên trong First Cloud Journey. Hiểu dịch vụ AWS cơ bản, cách dùng console \u0026amp; CLI. Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 2 - Làm quen với các thành viên FCJ - Đọc và lưu ý các nội quy, quy định tại đơn vị thực tập 11/08/2025 11/08/2025 3 - Tìm hiểu AWS và các loại dịch vụ + Compute + Storage + Networking + Database + \u0026hellip; 12/08/2025 12/08/2025 https://cloudjourney.awsstudygroup.com/ 4 - Tạo AWS Free Tier account - Tìm hiểu AWS Console \u0026amp; AWS CLI - Thực hành: + Tạo AWS account + Cài AWS CLI \u0026amp; cấu hình + Cách sử dụng AWS CLI 13/08/2025 13/08/2025 https://cloudjourney.awsstudygroup.com/ 5 - Tìm hiểu EC2 cơ bản: + Instance types + AMI + EBS + \u0026hellip; - Các cách remote SSH vào EC2 - Tìm hiểu Elastic IP 14/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ 6 - Thực hành: + Tạo EC2 instance + Kết nối SSH + Gắn EBS volume 15/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ Kết quả đạt được tuần 8: Hiểu AWS là gì và nắm được các nhóm dịch vụ cơ bản:\nCompute Storage Networking Database \u0026hellip; Đã tạo và cấu hình AWS Free Tier account thành công.\nLàm quen với AWS Management Console và biết cách tìm, truy cập, sử dụng dịch vụ từ giao diện web.\nCài đặt và cấu hình AWS CLI trên máy tính bao gồm:\nAccess Key Secret Key Region mặc định \u0026hellip; Sử dụng AWS CLI để thực hiện các thao tác cơ bản như:\nKiểm tra thông tin tài khoản \u0026amp; cấu hình Lấy danh sách region Xem dịch vụ EC2 Tạo và quản lý key pair Kiểm tra thông tin dịch vụ đang chạy \u0026hellip; Có khả năng kết nối giữa giao diện web và CLI để quản lý tài nguyên AWS song song.\n\u0026hellip;\n"
},
{
	"uri": "https://tuanvu250.github.io/FCJ-Report/vi/1-worklog/1.9-week9/",
	"title": "Worklog Tuần 9",
	"tags": [],
	"description": "",
	"content": "\r⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nMục tiêu tuần 9: Kết nối, làm quen với các thành viên trong First Cloud Journey. Hiểu dịch vụ AWS cơ bản, cách dùng console \u0026amp; CLI. Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 2 - Làm quen với các thành viên FCJ - Đọc và lưu ý các nội quy, quy định tại đơn vị thực tập 11/08/2025 11/08/2025 3 - Tìm hiểu AWS và các loại dịch vụ + Compute + Storage + Networking + Database + \u0026hellip; 12/08/2025 12/08/2025 https://cloudjourney.awsstudygroup.com/ 4 - Tạo AWS Free Tier account - Tìm hiểu AWS Console \u0026amp; AWS CLI - Thực hành: + Tạo AWS account + Cài AWS CLI \u0026amp; cấu hình + Cách sử dụng AWS CLI 13/08/2025 13/08/2025 https://cloudjourney.awsstudygroup.com/ 5 - Tìm hiểu EC2 cơ bản: + Instance types + AMI + EBS + \u0026hellip; - Các cách remote SSH vào EC2 - Tìm hiểu Elastic IP 14/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ 6 - Thực hành: + Tạo EC2 instance + Kết nối SSH + Gắn EBS volume 15/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ Kết quả đạt được tuần 9: Hiểu AWS là gì và nắm được các nhóm dịch vụ cơ bản:\nCompute Storage Networking Database \u0026hellip; Đã tạo và cấu hình AWS Free Tier account thành công.\nLàm quen với AWS Management Console và biết cách tìm, truy cập, sử dụng dịch vụ từ giao diện web.\nCài đặt và cấu hình AWS CLI trên máy tính bao gồm:\nAccess Key Secret Key Region mặc định \u0026hellip; Sử dụng AWS CLI để thực hiện các thao tác cơ bản như:\nKiểm tra thông tin tài khoản \u0026amp; cấu hình Lấy danh sách region Xem dịch vụ EC2 Tạo và quản lý key pair Kiểm tra thông tin dịch vụ đang chạy \u0026hellip; Có khả năng kết nối giữa giao diện web và CLI để quản lý tài nguyên AWS song song.\n\u0026hellip;\n"
},
{
	"uri": "https://tuanvu250.github.io/FCJ-Report/vi/2-proposal/",
	"title": "Bản đề xuất",
	"tags": [],
	"description": "",
	"content": "\r⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nTại phần này, bạn cần tóm tắt các nội dung trong workshop mà bạn dự tính sẽ làm.\nIoT Weather Platform for Lab Research Giải pháp AWS Serverless hợp nhất cho giám sát thời tiết thời gian thực 1. Tóm tắt điều hành IoT Weather Platform được thiết kế dành cho nhóm ITea Lab tại TP. Hồ Chí Minh nhằm nâng cao khả năng thu thập và phân tích dữ liệu thời tiết. Nền tảng hỗ trợ tối đa 5 trạm thời tiết, có khả năng mở rộng lên 10–15 trạm, sử dụng thiết bị biên Raspberry Pi kết hợp cảm biến ESP32 để truyền dữ liệu qua MQTT. Nền tảng tận dụng các dịch vụ AWS Serverless để cung cấp giám sát thời gian thực, phân tích dự đoán và tiết kiệm chi phí, với quyền truy cập giới hạn cho 5 thành viên phòng lab thông qua Amazon Cognito.\n2. Tuyên bố vấn đề Vấn đề hiện tại\nCác trạm thời tiết hiện tại yêu cầu thu thập dữ liệu thủ công, khó quản lý khi có nhiều trạm. Không có hệ thống tập trung cho dữ liệu hoặc phân tích thời gian thực, và các nền tảng bên thứ ba thường tốn kém và quá phức tạp.\nGiải pháp\nNền tảng sử dụng AWS IoT Core để tiếp nhận dữ liệu MQTT, AWS Lambda và API Gateway để xử lý, Amazon S3 để lưu trữ (bao gồm data lake), và AWS Glue Crawlers cùng các tác vụ ETL để trích xuất, chuyển đổi, tải dữ liệu từ S3 data lake sang một S3 bucket khác để phân tích. AWS Amplify với Next.js cung cấp giao diện web, và Amazon Cognito đảm bảo quyền truy cập an toàn. Tương tự như Thingsboard và CoreIoT, người dùng có thể đăng ký thiết bị mới và quản lý kết nối, nhưng nền tảng này hoạt động ở quy mô nhỏ hơn và phục vụ mục đích sử dụng nội bộ. Các tính năng chính bao gồm bảng điều khiển thời gian thực, phân tích xu hướng và chi phí vận hành thấp.\nLợi ích và hoàn vốn đầu tư (ROI)\nGiải pháp tạo nền tảng cơ bản để các thành viên phòng lab phát triển một nền tảng IoT lớn hơn, đồng thời cung cấp nguồn dữ liệu cho những người nghiên cứu AI phục vụ huấn luyện mô hình hoặc phân tích. Nền tảng giảm bớt báo cáo thủ công cho từng trạm thông qua hệ thống tập trung, đơn giản hóa quản lý và bảo trì, đồng thời cải thiện độ tin cậy dữ liệu. Chi phí hàng tháng ước tính 0,66 USD (theo AWS Pricing Calculator), tổng cộng 7,92 USD cho 12 tháng. Tất cả thiết bị IoT đã được trang bị từ hệ thống trạm thời tiết hiện tại, không phát sinh chi phí phát triển thêm. Thời gian hoàn vốn 6–12 tháng nhờ tiết kiệm đáng kể thời gian thao tác thủ công.\n3. Kiến trúc giải pháp Nền tảng áp dụng kiến trúc AWS Serverless để quản lý dữ liệu từ 5 trạm dựa trên Raspberry Pi, có thể mở rộng lên 15 trạm. Dữ liệu được tiếp nhận qua AWS IoT Core, lưu trữ trong S3 data lake và xử lý bởi AWS Glue Crawlers và ETL jobs để chuyển đổi và tải vào một S3 bucket khác cho mục đích phân tích. Lambda và API Gateway xử lý bổ sung, trong khi Amplify với Next.js cung cấp bảng điều khiển được bảo mật bởi Cognito.\nDịch vụ AWS sử dụng\nAWS IoT Core: Tiếp nhận dữ liệu MQTT từ 5 trạm, mở rộng lên 15. AWS Lambda: Xử lý dữ liệu và kích hoạt Glue jobs (2 hàm). Amazon API Gateway: Giao tiếp với ứng dụng web. Amazon S3: Lưu trữ dữ liệu thô (data lake) và dữ liệu đã xử lý (2 bucket). AWS Glue: Crawlers lập chỉ mục dữ liệu, ETL jobs chuyển đổi và tải dữ liệu. AWS Amplify: Lưu trữ giao diện web Next.js. Amazon Cognito: Quản lý quyền truy cập cho người dùng phòng lab. Thiết kế thành phần\nThiết bị biên: Raspberry Pi thu thập và lọc dữ liệu cảm biến, gửi tới IoT Core. Tiếp nhận dữ liệu: AWS IoT Core nhận tin nhắn MQTT từ thiết bị biên. Lưu trữ dữ liệu: Dữ liệu thô lưu trong S3 data lake; dữ liệu đã xử lý lưu ở một S3 bucket khác. Xử lý dữ liệu: AWS Glue Crawlers lập chỉ mục dữ liệu; ETL jobs chuyển đổi để phân tích. Giao diện web: AWS Amplify lưu trữ ứng dụng Next.js cho bảng điều khiển và phân tích thời gian thực. Quản lý người dùng: Amazon Cognito giới hạn 5 tài khoản hoạt động. 4. Triển khai kỹ thuật Các giai đoạn triển khai\nDự án gồm 2 phần — thiết lập trạm thời tiết biên và xây dựng nền tảng thời tiết — mỗi phần trải qua 4 giai đoạn:\nNghiên cứu và vẽ kiến trúc: Nghiên cứu Raspberry Pi với cảm biến ESP32 và thiết kế kiến trúc AWS Serverless (1 tháng trước kỳ thực tập). Tính toán chi phí và kiểm tra tính khả thi: Sử dụng AWS Pricing Calculator để ước tính và điều chỉnh (Tháng 1). Điều chỉnh kiến trúc để tối ưu chi phí/giải pháp: Tinh chỉnh (ví dụ tối ưu Lambda với Next.js) để đảm bảo hiệu quả (Tháng 2). Phát triển, kiểm thử, triển khai: Lập trình Raspberry Pi, AWS services với CDK/SDK và ứng dụng Next.js, sau đó kiểm thử và đưa vào vận hành (Tháng 2–3). Yêu cầu kỹ thuật\nTrạm thời tiết biên: Cảm biến (nhiệt độ, độ ẩm, lượng mưa, tốc độ gió), vi điều khiển ESP32, Raspberry Pi làm thiết bị biên. Raspberry Pi chạy Raspbian, sử dụng Docker để lọc dữ liệu và gửi 1 MB/ngày/trạm qua MQTT qua Wi-Fi. Nền tảng thời tiết: Kiến thức thực tế về AWS Amplify (lưu trữ Next.js), Lambda (giảm thiểu do Next.js xử lý), AWS Glue (ETL), S3 (2 bucket), IoT Core (gateway và rules), và Cognito (5 người dùng). Sử dụng AWS CDK/SDK để lập trình (ví dụ IoT Core rules tới S3). Next.js giúp giảm tải Lambda cho ứng dụng web fullstack. 5. Lộ trình \u0026amp; Mốc triển khai Trước thực tập (Tháng 0): 1 tháng lên kế hoạch và đánh giá trạm cũ. Thực tập (Tháng 1–3): Tháng 1: Học AWS và nâng cấp phần cứng. Tháng 2: Thiết kế và điều chỉnh kiến trúc. Tháng 3: Triển khai, kiểm thử, đưa vào sử dụng. Sau triển khai: Nghiên cứu thêm trong vòng 1 năm. 6. Ước tính ngân sách Có thể xem chi phí trên AWS Pricing Calculator\nHoặc tải tệp ước tính ngân sách.\nChi phí hạ tầng\nAWS Lambda: 0,00 USD/tháng (1.000 request, 512 MB lưu trữ). S3 Standard: 0,15 USD/tháng (6 GB, 2.100 request, 1 GB quét). Truyền dữ liệu: 0,02 USD/tháng (1 GB vào, 1 GB ra). AWS Amplify: 0,35 USD/tháng (256 MB, request 500 ms). Amazon API Gateway: 0,01 USD/tháng (2.000 request). AWS Glue ETL Jobs: 0,02 USD/tháng (2 DPU). AWS Glue Crawlers: 0,07 USD/tháng (1 crawler). MQTT (IoT Core): 0,08 USD/tháng (5 thiết bị, 45.000 tin nhắn). Tổng: 0,7 USD/tháng, 8,40 USD/12 tháng\nPhần cứng: 265 USD một lần (Raspberry Pi 5 và cảm biến). 7. Đánh giá rủi ro Ma trận rủi ro\nMất mạng: Ảnh hưởng trung bình, xác suất trung bình. Hỏng cảm biến: Ảnh hưởng cao, xác suất thấp. Vượt ngân sách: Ảnh hưởng trung bình, xác suất thấp. Chiến lược giảm thiểu\nMạng: Lưu trữ cục bộ trên Raspberry Pi với Docker. Cảm biến: Kiểm tra định kỳ, dự phòng linh kiện. Chi phí: Cảnh báo ngân sách AWS, tối ưu dịch vụ. Kế hoạch dự phòng\nQuay lại thu thập thủ công nếu AWS gặp sự cố. Sử dụng CloudFormation để khôi phục cấu hình liên quan đến chi phí. 8. Kết quả kỳ vọng Cải tiến kỹ thuật: Dữ liệu và phân tích thời gian thực thay thế quy trình thủ công. Có thể mở rộng tới 10–15 trạm.\nGiá trị dài hạn: Nền tảng dữ liệu 1 năm cho nghiên cứu AI, có thể tái sử dụng cho các dự án tương lai.\n"
},
{
	"uri": "https://tuanvu250.github.io/FCJ-Report/vi/5-workshop/5.2-prerequiste/",
	"title": "Các bước chuẩn bị",
	"tags": [],
	"description": "",
	"content": "IAM permissions Gắn IAM permission policy sau vào tài khoản aws user của bạn để triển khai và dọn dẹp tài nguyên trong workshop này.\n{\r\u0026#34;Version\u0026#34;: \u0026#34;2012-10-17\u0026#34;,\r\u0026#34;Statement\u0026#34;: [\r{\r\u0026#34;Sid\u0026#34;: \u0026#34;VisualEditor0\u0026#34;,\r\u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;,\r\u0026#34;Action\u0026#34;: [\r\u0026#34;cloudformation:*\u0026#34;,\r\u0026#34;cloudwatch:*\u0026#34;,\r\u0026#34;ec2:AcceptTransitGatewayPeeringAttachment\u0026#34;,\r\u0026#34;ec2:AcceptTransitGatewayVpcAttachment\u0026#34;,\r\u0026#34;ec2:AllocateAddress\u0026#34;,\r\u0026#34;ec2:AssociateAddress\u0026#34;,\r\u0026#34;ec2:AssociateIamInstanceProfile\u0026#34;,\r\u0026#34;ec2:AssociateRouteTable\u0026#34;,\r\u0026#34;ec2:AssociateSubnetCidrBlock\u0026#34;,\r\u0026#34;ec2:AssociateTransitGatewayRouteTable\u0026#34;,\r\u0026#34;ec2:AssociateVpcCidrBlock\u0026#34;,\r\u0026#34;ec2:AttachInternetGateway\u0026#34;,\r\u0026#34;ec2:AttachNetworkInterface\u0026#34;,\r\u0026#34;ec2:AttachVolume\u0026#34;,\r\u0026#34;ec2:AttachVpnGateway\u0026#34;,\r\u0026#34;ec2:AuthorizeSecurityGroupEgress\u0026#34;,\r\u0026#34;ec2:AuthorizeSecurityGroupIngress\u0026#34;,\r\u0026#34;ec2:CreateClientVpnEndpoint\u0026#34;,\r\u0026#34;ec2:CreateClientVpnRoute\u0026#34;,\r\u0026#34;ec2:CreateCustomerGateway\u0026#34;,\r\u0026#34;ec2:CreateDhcpOptions\u0026#34;,\r\u0026#34;ec2:CreateFlowLogs\u0026#34;,\r\u0026#34;ec2:CreateInternetGateway\u0026#34;,\r\u0026#34;ec2:CreateLaunchTemplate\u0026#34;,\r\u0026#34;ec2:CreateNetworkAcl\u0026#34;,\r\u0026#34;ec2:CreateNetworkInterface\u0026#34;,\r\u0026#34;ec2:CreateNetworkInterfacePermission\u0026#34;,\r\u0026#34;ec2:CreateRoute\u0026#34;,\r\u0026#34;ec2:CreateRouteTable\u0026#34;,\r\u0026#34;ec2:CreateSecurityGroup\u0026#34;,\r\u0026#34;ec2:CreateSubnet\u0026#34;,\r\u0026#34;ec2:CreateSubnetCidrReservation\u0026#34;,\r\u0026#34;ec2:CreateTags\u0026#34;,\r\u0026#34;ec2:CreateTransitGateway\u0026#34;,\r\u0026#34;ec2:CreateTransitGatewayPeeringAttachment\u0026#34;,\r\u0026#34;ec2:CreateTransitGatewayPrefixListReference\u0026#34;,\r\u0026#34;ec2:CreateTransitGatewayRoute\u0026#34;,\r\u0026#34;ec2:CreateTransitGatewayRouteTable\u0026#34;,\r\u0026#34;ec2:CreateTransitGatewayVpcAttachment\u0026#34;,\r\u0026#34;ec2:CreateVpc\u0026#34;,\r\u0026#34;ec2:CreateVpcEndpoint\u0026#34;,\r\u0026#34;ec2:CreateVpcEndpointConnectionNotification\u0026#34;,\r\u0026#34;ec2:CreateVpcEndpointServiceConfiguration\u0026#34;,\r\u0026#34;ec2:CreateVpnConnection\u0026#34;,\r\u0026#34;ec2:CreateVpnConnectionRoute\u0026#34;,\r\u0026#34;ec2:CreateVpnGateway\u0026#34;,\r\u0026#34;ec2:DeleteCustomerGateway\u0026#34;,\r\u0026#34;ec2:DeleteFlowLogs\u0026#34;,\r\u0026#34;ec2:DeleteInternetGateway\u0026#34;,\r\u0026#34;ec2:DeleteNetworkInterface\u0026#34;,\r\u0026#34;ec2:DeleteNetworkInterfacePermission\u0026#34;,\r\u0026#34;ec2:DeleteRoute\u0026#34;,\r\u0026#34;ec2:DeleteRouteTable\u0026#34;,\r\u0026#34;ec2:DeleteSecurityGroup\u0026#34;,\r\u0026#34;ec2:DeleteSubnet\u0026#34;,\r\u0026#34;ec2:DeleteSubnetCidrReservation\u0026#34;,\r\u0026#34;ec2:DeleteTags\u0026#34;,\r\u0026#34;ec2:DeleteTransitGateway\u0026#34;,\r\u0026#34;ec2:DeleteTransitGatewayPeeringAttachment\u0026#34;,\r\u0026#34;ec2:DeleteTransitGatewayPrefixListReference\u0026#34;,\r\u0026#34;ec2:DeleteTransitGatewayRoute\u0026#34;,\r\u0026#34;ec2:DeleteTransitGatewayRouteTable\u0026#34;,\r\u0026#34;ec2:DeleteTransitGatewayVpcAttachment\u0026#34;,\r\u0026#34;ec2:DeleteVpc\u0026#34;,\r\u0026#34;ec2:DeleteVpcEndpoints\u0026#34;,\r\u0026#34;ec2:DeleteVpcEndpointServiceConfigurations\u0026#34;,\r\u0026#34;ec2:DeleteVpnConnection\u0026#34;,\r\u0026#34;ec2:DeleteVpnConnectionRoute\u0026#34;,\r\u0026#34;ec2:Describe*\u0026#34;,\r\u0026#34;ec2:DetachInternetGateway\u0026#34;,\r\u0026#34;ec2:DisassociateAddress\u0026#34;,\r\u0026#34;ec2:DisassociateRouteTable\u0026#34;,\r\u0026#34;ec2:GetLaunchTemplateData\u0026#34;,\r\u0026#34;ec2:GetTransitGatewayAttachmentPropagations\u0026#34;,\r\u0026#34;ec2:ModifyInstanceAttribute\u0026#34;,\r\u0026#34;ec2:ModifySecurityGroupRules\u0026#34;,\r\u0026#34;ec2:ModifyTransitGatewayVpcAttachment\u0026#34;,\r\u0026#34;ec2:ModifyVpcAttribute\u0026#34;,\r\u0026#34;ec2:ModifyVpcEndpoint\u0026#34;,\r\u0026#34;ec2:ReleaseAddress\u0026#34;,\r\u0026#34;ec2:ReplaceRoute\u0026#34;,\r\u0026#34;ec2:RevokeSecurityGroupEgress\u0026#34;,\r\u0026#34;ec2:RevokeSecurityGroupIngress\u0026#34;,\r\u0026#34;ec2:RunInstances\u0026#34;,\r\u0026#34;ec2:StartInstances\u0026#34;,\r\u0026#34;ec2:StopInstances\u0026#34;,\r\u0026#34;ec2:UpdateSecurityGroupRuleDescriptionsEgress\u0026#34;,\r\u0026#34;ec2:UpdateSecurityGroupRuleDescriptionsIngress\u0026#34;,\r\u0026#34;iam:AddRoleToInstanceProfile\u0026#34;,\r\u0026#34;iam:AttachRolePolicy\u0026#34;,\r\u0026#34;iam:CreateInstanceProfile\u0026#34;,\r\u0026#34;iam:CreatePolicy\u0026#34;,\r\u0026#34;iam:CreateRole\u0026#34;,\r\u0026#34;iam:DeleteInstanceProfile\u0026#34;,\r\u0026#34;iam:DeletePolicy\u0026#34;,\r\u0026#34;iam:DeleteRole\u0026#34;,\r\u0026#34;iam:DeleteRolePolicy\u0026#34;,\r\u0026#34;iam:DetachRolePolicy\u0026#34;,\r\u0026#34;iam:GetInstanceProfile\u0026#34;,\r\u0026#34;iam:GetPolicy\u0026#34;,\r\u0026#34;iam:GetRole\u0026#34;,\r\u0026#34;iam:GetRolePolicy\u0026#34;,\r\u0026#34;iam:ListPolicyVersions\u0026#34;,\r\u0026#34;iam:ListRoles\u0026#34;,\r\u0026#34;iam:PassRole\u0026#34;,\r\u0026#34;iam:PutRolePolicy\u0026#34;,\r\u0026#34;iam:RemoveRoleFromInstanceProfile\u0026#34;,\r\u0026#34;lambda:CreateFunction\u0026#34;,\r\u0026#34;lambda:DeleteFunction\u0026#34;,\r\u0026#34;lambda:DeleteLayerVersion\u0026#34;,\r\u0026#34;lambda:GetFunction\u0026#34;,\r\u0026#34;lambda:GetLayerVersion\u0026#34;,\r\u0026#34;lambda:InvokeFunction\u0026#34;,\r\u0026#34;lambda:PublishLayerVersion\u0026#34;,\r\u0026#34;logs:CreateLogGroup\u0026#34;,\r\u0026#34;logs:DeleteLogGroup\u0026#34;,\r\u0026#34;logs:DescribeLogGroups\u0026#34;,\r\u0026#34;logs:PutRetentionPolicy\u0026#34;,\r\u0026#34;route53:ChangeTagsForResource\u0026#34;,\r\u0026#34;route53:CreateHealthCheck\u0026#34;,\r\u0026#34;route53:CreateHostedZone\u0026#34;,\r\u0026#34;route53:CreateTrafficPolicy\u0026#34;,\r\u0026#34;route53:DeleteHostedZone\u0026#34;,\r\u0026#34;route53:DisassociateVPCFromHostedZone\u0026#34;,\r\u0026#34;route53:GetHostedZone\u0026#34;,\r\u0026#34;route53:ListHostedZones\u0026#34;,\r\u0026#34;route53domains:ListDomains\u0026#34;,\r\u0026#34;route53domains:ListOperations\u0026#34;,\r\u0026#34;route53domains:ListTagsForDomain\u0026#34;,\r\u0026#34;route53resolver:AssociateResolverEndpointIpAddress\u0026#34;,\r\u0026#34;route53resolver:AssociateResolverRule\u0026#34;,\r\u0026#34;route53resolver:CreateResolverEndpoint\u0026#34;,\r\u0026#34;route53resolver:CreateResolverRule\u0026#34;,\r\u0026#34;route53resolver:DeleteResolverEndpoint\u0026#34;,\r\u0026#34;route53resolver:DeleteResolverRule\u0026#34;,\r\u0026#34;route53resolver:DisassociateResolverEndpointIpAddress\u0026#34;,\r\u0026#34;route53resolver:DisassociateResolverRule\u0026#34;,\r\u0026#34;route53resolver:GetResolverEndpoint\u0026#34;,\r\u0026#34;route53resolver:GetResolverRule\u0026#34;,\r\u0026#34;route53resolver:ListResolverEndpointIpAddresses\u0026#34;,\r\u0026#34;route53resolver:ListResolverEndpoints\u0026#34;,\r\u0026#34;route53resolver:ListResolverRuleAssociations\u0026#34;,\r\u0026#34;route53resolver:ListResolverRules\u0026#34;,\r\u0026#34;route53resolver:ListTagsForResource\u0026#34;,\r\u0026#34;route53resolver:UpdateResolverEndpoint\u0026#34;,\r\u0026#34;route53resolver:UpdateResolverRule\u0026#34;,\r\u0026#34;s3:AbortMultipartUpload\u0026#34;,\r\u0026#34;s3:CreateBucket\u0026#34;,\r\u0026#34;s3:DeleteBucket\u0026#34;,\r\u0026#34;s3:DeleteObject\u0026#34;,\r\u0026#34;s3:GetAccountPublicAccessBlock\u0026#34;,\r\u0026#34;s3:GetBucketAcl\u0026#34;,\r\u0026#34;s3:GetBucketOwnershipControls\u0026#34;,\r\u0026#34;s3:GetBucketPolicy\u0026#34;,\r\u0026#34;s3:GetBucketPolicyStatus\u0026#34;,\r\u0026#34;s3:GetBucketPublicAccessBlock\u0026#34;,\r\u0026#34;s3:GetObject\u0026#34;,\r\u0026#34;s3:GetObjectVersion\u0026#34;,\r\u0026#34;s3:GetBucketVersioning\u0026#34;,\r\u0026#34;s3:ListAccessPoints\u0026#34;,\r\u0026#34;s3:ListAccessPointsForObjectLambda\u0026#34;,\r\u0026#34;s3:ListAllMyBuckets\u0026#34;,\r\u0026#34;s3:ListBucket\u0026#34;,\r\u0026#34;s3:ListBucketMultipartUploads\u0026#34;,\r\u0026#34;s3:ListBucketVersions\u0026#34;,\r\u0026#34;s3:ListJobs\u0026#34;,\r\u0026#34;s3:ListMultipartUploadParts\u0026#34;,\r\u0026#34;s3:ListMultiRegionAccessPoints\u0026#34;,\r\u0026#34;s3:ListStorageLensConfigurations\u0026#34;,\r\u0026#34;s3:PutAccountPublicAccessBlock\u0026#34;,\r\u0026#34;s3:PutBucketAcl\u0026#34;,\r\u0026#34;s3:PutBucketPolicy\u0026#34;,\r\u0026#34;s3:PutBucketPublicAccessBlock\u0026#34;,\r\u0026#34;s3:PutObject\u0026#34;,\r\u0026#34;secretsmanager:CreateSecret\u0026#34;,\r\u0026#34;secretsmanager:DeleteSecret\u0026#34;,\r\u0026#34;secretsmanager:DescribeSecret\u0026#34;,\r\u0026#34;secretsmanager:GetSecretValue\u0026#34;,\r\u0026#34;secretsmanager:ListSecrets\u0026#34;,\r\u0026#34;secretsmanager:ListSecretVersionIds\u0026#34;,\r\u0026#34;secretsmanager:PutResourcePolicy\u0026#34;,\r\u0026#34;secretsmanager:TagResource\u0026#34;,\r\u0026#34;secretsmanager:UpdateSecret\u0026#34;,\r\u0026#34;sns:ListTopics\u0026#34;,\r\u0026#34;ssm:DescribeInstanceProperties\u0026#34;,\r\u0026#34;ssm:DescribeSessions\u0026#34;,\r\u0026#34;ssm:GetConnectionStatus\u0026#34;,\r\u0026#34;ssm:GetParameters\u0026#34;,\r\u0026#34;ssm:ListAssociations\u0026#34;,\r\u0026#34;ssm:ResumeSession\u0026#34;,\r\u0026#34;ssm:StartSession\u0026#34;,\r\u0026#34;ssm:TerminateSession\u0026#34;\r],\r\u0026#34;Resource\u0026#34;: \u0026#34;*\u0026#34;\r}\r]\r} Khởi tạo tài nguyên bằng CloudFormation Trong lab này, chúng ta sẽ dùng N.Virginia region (us-east-1).\nĐể chuẩn bị cho môi trường làm workshop, chúng ta deploy CloudFormation template sau (click link): PrivateLinkWorkshop . Để nguyên các lựa chọn mặc định.\nLựa chọn 2 mục acknowledgement Chọn Create stack Quá trình triển khai CloudFormation cần khoảng 15 phút để hoàn thành.\n2 VPCs đã được tạo 3 EC2s đã được tạo "
},
{
	"uri": "https://tuanvu250.github.io/FCJ-Report/vi/5-workshop/5.3-s3-vpc/5.3.2-test-gwe/",
	"title": "Kiểm tra Gateway Endpoint",
	"tags": [],
	"description": "",
	"content": "Tạo S3 bucket Đi đến S3 management console Trong Bucket console, chọn Create bucket Trong Create bucket console Đặt tên bucket: chọn 1 tên mà không bị trùng trong phạm vi toàn cầu (gợi ý: lab\u0026lt;số-lab\u0026gt;\u0026lt;tên-bạn\u0026gt;) Giữ nguyên giá trị của các fields khác (default) Kéo chuột xuống và chọn Create bucket Tạo thành công S3 bucket Kết nối với EC2 bằng session manager Trong workshop này, bạn sẽ dùng AWS Session Manager để kết nối đến các EC2 instances. Session Manager là 1 tính năng trong dịch vụ Systems Manager được quản lý hoàn toàn bởi AWS. System manager cho phép bạn quản lý Amazon EC2 instances và các máy ảo on-premises (VMs)thông qua 1 browser-based shell. Session Manager cung cấp khả năng quản lý phiên bản an toàn và có thể kiểm tra mà không cần mở cổng vào, duy trì máy chủ bastion host hoặc quản lý khóa SSH.\nFirst cloud journey Lab để hiểu sâu hơn về Session manager.\nTrong AWS Management Console, gõ Systems Manager trong ô tìm kiếm và nhấn Enter: Từ Systems Manager menu, tìm Node Management ở thanh bên trái và chọn Session Manager: Click Start Session, và chọn EC2 instance tên Test-Gateway-Endpoint. Phiên bản EC2 này đã chạy trong \u0026ldquo;VPC cloud\u0026rdquo; và sẽ được dùng để kiểm tra khả năng kết nối với Amazon S3 thông qua điểm cuối Cổng mà bạn vừa tạo (s3-gwe).\nSession Manager sẽ mở browser tab mới với shell prompt: sh-4.2 $\nBạn đã bắt đầu phiên kết nối đến EC2 trong VPC Cloud thành công. Trong bước tiếp theo, chúng ta sẽ tạo một S3 bucket và một tệp trong đó.\nCreate a file and upload to s3 bucket Đổi về ssm-user\u0026rsquo;s thư mục bằng lệnh \u0026ldquo;cd ~\u0026rdquo; Tạo 1 file để kiểm tra bằng lệnh \u0026ldquo;fallocate -l 1G testfile.xyz\u0026rdquo;, 1 file tên \u0026ldquo;testfile.xyz\u0026rdquo; có kích thước 1GB sẽ được tạo. Tải file mình vừa tạo lên S3 với lệnh \u0026ldquo;aws s3 cp testfile.xyz s3://your-bucket-name\u0026rdquo;. Thay your-bucket-name bằng tên S3 bạn đã tạo. Bạn đã tải thành công tệp lên bộ chứa S3 của mình. Bây giờ bạn có thể kết thúc session.\nKiểm tra object trong S3 bucket Đi đến S3 console. Click tên s3 bucket của bạn Trong Bucket console, bạn sẽ thấy tệp bạn đã tải lên S3 bucket của mình Tóm tắt Chúc mừng bạn đã hoàn thành truy cập S3 từ VPC. Trong phần này, bạn đã tạo gateway endpoint cho Amazon S3 và sử dụng AWS CLI để tải file lên. Quá trình tải lên hoạt động vì gateway endpoint cho phép giao tiếp với S3 mà không cần Internet gateway gắn vào \u0026ldquo;VPC Cloud\u0026rdquo;. Điều này thể hiện chức năng của gateway endpoint như một đường dẫn an toàn đến S3 mà không cần đi qua pub lic Internet.\n"
},
{
	"uri": "https://tuanvu250.github.io/FCJ-Report/vi/5-workshop/5.4-s3-onprem/5.4.2-create-interface-enpoint/",
	"title": "Tạo một S3 Interface endpoint",
	"tags": [],
	"description": "",
	"content": "Trong phần này, bạn sẽ tạo và kiểm tra Interface Endpoint S3 bằng cách sử dụng môi trường truyền thống mô phỏng.\nQuay lại Amazon VPC menu. Trong thanh điều hướng bên trái, chọn Endpoints, sau đó click Create Endpoint.\nTrong Create endpoint console:\nĐặt tên interface endpoint Trong Service category, chọn aws services Trong Search box, gõ S3 và nhấn Enter. Chọn endpoint có tên com.amazonaws.us-east-1.s3. Đảm bảo rằng cột Type có giá trị Interface. Đối với VPC, chọn VPC Cloud từ drop-down. Đảm bảo rằng bạn chọn \u0026ldquo;VPC Cloud\u0026rdquo; và không phải \u0026ldquo;VPC On-prem\u0026rdquo;\nMở rộng Additional settings và đảm bảo rằng Enable DNS name không được chọn (sẽ sử dụng điều này trong phần tiếp theo của workshop) Chọn 2 subnets trong AZs sau: us-east-1a and us-east-1b Đối với Security group, chọn SGforS3Endpoint: Giữ default policy - full access và click Create endpoint Chúc mừng bạn đã tạo thành công S3 interface endpoint. Ở bước tiếp theo, chúng ta sẽ kiểm tra interface endpoint.\n"
},
{
	"uri": "https://tuanvu250.github.io/FCJ-Report/vi/1-worklog/1.10-week10/",
	"title": "Worklog Tuần 10",
	"tags": [],
	"description": "",
	"content": "\r⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nMục tiêu tuần 10: Kết nối, làm quen với các thành viên trong First Cloud Journey. Hiểu dịch vụ AWS cơ bản, cách dùng console \u0026amp; CLI. Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 2 - Làm quen với các thành viên FCJ - Đọc và lưu ý các nội quy, quy định tại đơn vị thực tập 11/08/2025 11/08/2025 3 - Tìm hiểu AWS và các loại dịch vụ + Compute + Storage + Networking + Database + \u0026hellip; 12/08/2025 12/08/2025 https://cloudjourney.awsstudygroup.com/ 4 - Tạo AWS Free Tier account - Tìm hiểu AWS Console \u0026amp; AWS CLI - Thực hành: + Tạo AWS account + Cài AWS CLI \u0026amp; cấu hình + Cách sử dụng AWS CLI 13/08/2025 13/08/2025 https://cloudjourney.awsstudygroup.com/ 5 - Tìm hiểu EC2 cơ bản: + Instance types + AMI + EBS + \u0026hellip; - Các cách remote SSH vào EC2 - Tìm hiểu Elastic IP 14/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ 6 - Thực hành: + Tạo EC2 instance + Kết nối SSH + Gắn EBS volume 15/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ Kết quả đạt được tuần 10: Hiểu AWS là gì và nắm được các nhóm dịch vụ cơ bản:\nCompute Storage Networking Database \u0026hellip; Đã tạo và cấu hình AWS Free Tier account thành công.\nLàm quen với AWS Management Console và biết cách tìm, truy cập, sử dụng dịch vụ từ giao diện web.\nCài đặt và cấu hình AWS CLI trên máy tính bao gồm:\nAccess Key Secret Key Region mặc định \u0026hellip; Sử dụng AWS CLI để thực hiện các thao tác cơ bản như:\nKiểm tra thông tin tài khoản \u0026amp; cấu hình Lấy danh sách region Xem dịch vụ EC2 Tạo và quản lý key pair Kiểm tra thông tin dịch vụ đang chạy \u0026hellip; Có khả năng kết nối giữa giao diện web và CLI để quản lý tài nguyên AWS song song.\n\u0026hellip;\n"
},
{
	"uri": "https://tuanvu250.github.io/FCJ-Report/vi/1-worklog/1.11-week11/",
	"title": "Worklog Tuần 11",
	"tags": [],
	"description": "",
	"content": "\r⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nMục tiêu tuần 11: Kết nối, làm quen với các thành viên trong First Cloud Journey. Hiểu dịch vụ AWS cơ bản, cách dùng console \u0026amp; CLI. Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 2 - Làm quen với các thành viên FCJ - Đọc và lưu ý các nội quy, quy định tại đơn vị thực tập 11/08/2025 11/08/2025 3 - Tìm hiểu AWS và các loại dịch vụ + Compute + Storage + Networking + Database + \u0026hellip; 12/08/2025 12/08/2025 https://cloudjourney.awsstudygroup.com/ 4 - Tạo AWS Free Tier account - Tìm hiểu AWS Console \u0026amp; AWS CLI - Thực hành: + Tạo AWS account + Cài AWS CLI \u0026amp; cấu hình + Cách sử dụng AWS CLI 13/08/2025 13/08/2025 https://cloudjourney.awsstudygroup.com/ 5 - Tìm hiểu EC2 cơ bản: + Instance types + AMI + EBS + \u0026hellip; - Các cách remote SSH vào EC2 - Tìm hiểu Elastic IP 14/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ 6 - Thực hành: + Tạo EC2 instance + Kết nối SSH + Gắn EBS volume 15/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ Kết quả đạt được tuần 11: Hiểu AWS là gì và nắm được các nhóm dịch vụ cơ bản:\nCompute Storage Networking Database \u0026hellip; Đã tạo và cấu hình AWS Free Tier account thành công.\nLàm quen với AWS Management Console và biết cách tìm, truy cập, sử dụng dịch vụ từ giao diện web.\nCài đặt và cấu hình AWS CLI trên máy tính bao gồm:\nAccess Key Secret Key Region mặc định \u0026hellip; Sử dụng AWS CLI để thực hiện các thao tác cơ bản như:\nKiểm tra thông tin tài khoản \u0026amp; cấu hình Lấy danh sách region Xem dịch vụ EC2 Tạo và quản lý key pair Kiểm tra thông tin dịch vụ đang chạy \u0026hellip; Có khả năng kết nối giữa giao diện web và CLI để quản lý tài nguyên AWS song song.\n\u0026hellip;\n"
},
{
	"uri": "https://tuanvu250.github.io/FCJ-Report/vi/1-worklog/1.12-week12/",
	"title": "Worklog Tuần 12",
	"tags": [],
	"description": "",
	"content": "\r⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nMục tiêu tuần 12: Kết nối, làm quen với các thành viên trong First Cloud Journey. Hiểu dịch vụ AWS cơ bản, cách dùng console \u0026amp; CLI. Các công việc cần triển khai trong tuần này: Thứ Công việc Ngày bắt đầu Ngày hoàn thành Nguồn tài liệu 2 - Làm quen với các thành viên FCJ - Đọc và lưu ý các nội quy, quy định tại đơn vị thực tập 11/08/2025 11/08/2025 3 - Tìm hiểu AWS và các loại dịch vụ + Compute + Storage + Networking + Database + \u0026hellip; 12/08/2025 12/08/2025 https://cloudjourney.awsstudygroup.com/ 4 - Tạo AWS Free Tier account - Tìm hiểu AWS Console \u0026amp; AWS CLI - Thực hành: + Tạo AWS account + Cài AWS CLI \u0026amp; cấu hình + Cách sử dụng AWS CLI 13/08/2025 13/08/2025 https://cloudjourney.awsstudygroup.com/ 5 - Tìm hiểu EC2 cơ bản: + Instance types + AMI + EBS + \u0026hellip; - Các cách remote SSH vào EC2 - Tìm hiểu Elastic IP 14/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ 6 - Thực hành: + Tạo EC2 instance + Kết nối SSH + Gắn EBS volume 15/08/2025 15/08/2025 https://cloudjourney.awsstudygroup.com/ Kết quả đạt được tuần 12: Hiểu AWS là gì và nắm được các nhóm dịch vụ cơ bản:\nCompute Storage Networking Database \u0026hellip; Đã tạo và cấu hình AWS Free Tier account thành công.\nLàm quen với AWS Management Console và biết cách tìm, truy cập, sử dụng dịch vụ từ giao diện web.\nCài đặt và cấu hình AWS CLI trên máy tính bao gồm:\nAccess Key Secret Key Region mặc định \u0026hellip; Sử dụng AWS CLI để thực hiện các thao tác cơ bản như:\nKiểm tra thông tin tài khoản \u0026amp; cấu hình Lấy danh sách region Xem dịch vụ EC2 Tạo và quản lý key pair Kiểm tra thông tin dịch vụ đang chạy \u0026hellip; Có khả năng kết nối giữa giao diện web và CLI để quản lý tài nguyên AWS song song.\n\u0026hellip;\n"
},
{
	"uri": "https://tuanvu250.github.io/FCJ-Report/vi/3-blogstranslated/",
	"title": "Các bài blogs đã dịch",
	"tags": [],
	"description": "",
	"content": "\r⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nTại đây sẽ là phần liệt kê, giới thiệu các blogs mà các bạn đã dịch. Ví dụ:\nBlog 1 - Chạy và tối ưu các Small Language Models tại on-premises và tại edge Bài viết hướng dẫn cách triển khai Small Language Models (SLMs) vào môi trường AWS on-premises hoặc edge (AWS Local Zones và AWS Outposts) để đáp ứng các yêu cầu về data residency, information security policy, và low latency. Nội dung bao gồm: sự khác biệt giữa LLMs và SLMs, lợi ích của SLMs (thời gian suy luận nhanh hơn, yêu cầu tài nguyên thấp hơn, phù hợp edge computing), kiến trúc triển khai sử dụng Llama.cpp framework, các bước cụ thể để cài đặt và cấu hình (khởi chạy GPU instance, cài đặt NVIDIA drivers, cài đặt Llama.cpp, tải và chuyển đổi model sang định dạng GGUF), và các ví dụ tối ưu hóa cho chatbot và text summarization.\nBlog 2 - Hội nghị AWS EUC New York Summit: The AI Advantage: Unlocking the full potential of your EUC Services Bài viết giới thiệu về phiên thảo luận tại AWS EUC New York Summit, tập trung vào cách ứng dụng AI để tối ưu các tác vụ quản trị End-User Computing (EUC) và nâng cao năng suất người dùng. Nội dung chính: tận dụng AI agentic của Amazon Bedrock kết hợp với Amazon WorkSpaces và Amazon CloudWatch để tự động hóa các tác vụ quản trị, cung cấp thông tin chi tiết có thể hành động (actionable insights) từ metrics và logs quan trọng, thu thập dữ liệu về user connectivity, platforms và IP addresses, phân tích dữ liệu để tối ưu hoạt động người dùng cuối. Phiên builders session cung cấp kiến thức chuyên sâu và trải nghiệm học tập thực tế về cách tích hợp AI vào framework EUC hiện có.\nBlog 3 - Cách thiết lập cảnh báo tự động cho các AWS Savings Plans mới mua Bài viết hướng dẫn cách thiết lập hệ thống giám sát và cảnh báo tự động để phát hiện AWS Savings Plans sử dụng kém hiệu quả trong thời hạn hoàn trả hợp lệ (7 ngày đầu và trong cùng tháng mua). Nội dung bao gồm: giải thích về AWS Savings Plans và chính sách hoàn trả (cam kết ≤ $100/giờ), kiến trúc giải pháp sử dụng AWS CloudFormation, Step Functions, SNS, EventBridge và IAM roles, triển khai trên hai tài khoản (Management Account và Member Account) theo AWS security best practices, quy trình tự động phân tích tỷ lệ sử dụng Savings Plans và gửi cảnh báo qua email khi phát hiện plan sử dụng thấp dưới ngưỡng định sẵn, hướng dẫn triển khai chi tiết từng bước và cách kiểm thử giải pháp.\n"
},
{
	"uri": "https://tuanvu250.github.io/FCJ-Report/vi/5-workshop/5.4-s3-onprem/5.4.3-test-endpoint/",
	"title": "Kiểm tra Interface Endpoint",
	"tags": [],
	"description": "",
	"content": "Lấy regional DNS name (tên DNS khu vực) của S3 interface endpoint Trong Amazon VPC menu, chọn Endpoints.\nClick tên của endpoint chúng ta mới tạo ở mục 4.2: s3-interface-endpoint. Click details và lưu lại regional DNS name của endpoint (cái đầu tiên) vào text-editor của bạn để dùng ở các bước sau.\nKết nối đến EC2 instance ở trong \u0026ldquo;VPC On-prem\u0026rdquo; (giả lập môi trường truyền thống) Đi đến Session manager bằng cách gõ \u0026ldquo;session manager\u0026rdquo; vào ô tìm kiếm\nClick Start Session, chọn EC2 instance có tên Test-Interface-Endpoint. EC2 instance này đang chạy trên \u0026ldquo;VPC On-prem\u0026rdquo; và sẽ được sử dụng để kiểm tra kết nối đến Amazon S3 thông qua Interface endpoint. Session Manager sẽ mở 1 browser tab mới với shell prompt: sh-4.2 $\nĐi đến ssm-user\u0026rsquo;s home directory với lệnh \u0026ldquo;cd ~\u0026rdquo;\nTạo 1 file tên testfile2.xyz\nfallocate -l 1G testfile2.xyz Copy file vào S3 bucket mình tạo ở section 4.2 aws s3 cp --endpoint-url https://bucket.\u0026lt;Regional-DNS-Name\u0026gt; testfile2.xyz s3://\u0026lt;your-bucket-name\u0026gt; Câu lệnh này yêu cầu thông số \u0026ndash;endpoint-url, bởi vì bạn cần sử dụng DNS name chỉ định cho endpoint để truy cập vào S3 thông qua Interface endpoint. Không lấy \u0026rsquo; * \u0026rsquo; khi copy/paste tên DNS khu vực. Cung cấp tên S3 bucket của bạn Bây giờ tệp đã được thêm vào bộ chứa S3 của bạn. Hãy kiểm tra bộ chứa S3 của bạn trong bước tiếp theo.\nKiểm tra Object trong S3 bucket Đi đến S3 console Click Buckets Click tên bucket của bạn và bạn sẽ thấy testfile2.xyz đã được thêm vào s3 bucket của bạn "
},
{
	"uri": "https://tuanvu250.github.io/FCJ-Report/vi/5-workshop/5.3-s3-vpc/",
	"title": "Truy cập S3 từ VPC",
	"tags": [],
	"description": "",
	"content": "Sử dụng Gateway endpoint Trong phần này, bạn sẽ tạo một Gateway endpoint để truy cập Amazon S3 từ một EC2 instance. Gateway endpoint sẽ cho phép tải một object lên S3 bucket mà không cần sử dụng Internet Công cộng. Để tạo endpoint, bạn phải chỉ định VPC mà bạn muốn tạo endpoint và dịch vụ (trong trường hợp này là S3) mà bạn muốn thiết lập kết nối.\nNội dung Tạo gateway endpoint Test gateway endpoint "
},
{
	"uri": "https://tuanvu250.github.io/FCJ-Report/vi/4-eventparticipated/",
	"title": "Các events đã tham gia",
	"tags": [],
	"description": "",
	"content": " Trong phần này, các bạn cần liệt kê và mô tả chi tiết các sự kiện (event) mà mình đã tham gia trong suốt quá trình thực tập hoặc làm việc.\nMỗi sự kiện nên được trình bày theo định dạng Event 1, Event 2, Event 3…, kèm theo các thông tin:\nTên sự kiện Thời gian tổ chức Địa điểm (nếu có) Vai trò của bạn trong sự kiện (người tham dự, hỗ trợ tổ chức, diễn giả, v.v.) Mô tả ngắn gọn nội dung và hoạt động chính trong sự kiện Kết quả hoặc giá trị đạt được (bài học, kỹ năng mới, đóng góp cho nhóm/dự án) Việc liệt kê này giúp thể hiện rõ sự tham gia thực tế của bạn, cũng như các kỹ năng mềm và kinh nghiệm bạn đã tích lũy qua từng sự kiện. Trong quá trình thực tập, em đã tham gia 2 events, với mỗi event là một trải nghiệm đáng nhớ với những kiến thức mới, hay và bổ ích, cùng với đó là nhứng món quà và những khoảnh khắc rất tuyệt vời.\nEvent 1 Tên sự kiện: Vietnam Cloud Day 2025 : Ho Chi Minh City Connect Edition for Builders (Track 1: GenAI \u0026amp; Data)\nThời gian: 09:00 ngày 18/09/2025\nĐịa điểm: Tầng 26, tòa nhà Bitexco, số 02 đường Hải Triều, phường Sài Gòn, thành phố Hồ Chí Minh\nVai trò trong sự kiện: Người tham dự\nEvent 2 Tên sự kiện: GenAI-powered App-DB Modernization workshop\nThời gian: 09:00 ngày 13/08/2025\nĐịa điểm: Tầng 26, tòa nhà Bitexco, số 02 đường Hải Triều, phường Sài Gòn, thành phố Hồ Chí Minh\nVai trò trong sự kiện: Người tham dự\n"
},
{
	"uri": "https://tuanvu250.github.io/FCJ-Report/vi/5-workshop/5.4-s3-onprem/5.4.4-dns-simulation/",
	"title": "Mô phỏng On-premises DNS ",
	"tags": [],
	"description": "",
	"content": "AWS PrivateLink endpoint có một địa chỉ IP cố định trong từng AZ nơi chúng được triển khai, trong suốt thời gian tồn tại của endpoint (cho đến khi endpoint bị xóa). Các địa chỉ IP này được gắn vào Elastic network interface (ENI). AWS khuyến nghị sử dụng DNS để resolve địa chỉ IP cho endpoint để các ứng dụng downstream sử dụng địa chỉ IP mới nhất khi ENIs được thêm vào AZ mới hoặc bị xóa theo thời gian.\nTrong phần này, bạn sẽ tạo một quy tắc chuyển tiếp (forwarding rule) để gửi các yêu cầu resolve DNS từ môi trường truyền thống (mô phỏng) đến Private Hosted Zone trên Route 53. Phần này tận dụng cơ sở hạ tầng do CloudFormation triển khai trong phần Chuẩn bị môi trường.\nTạo DNS Alias Records cho Interface endpoint Click link để đi đến Route 53 management console (Hosted Zones section). Mẫu CloudFormation mà bạn triển khai trong phần Chuẩn bị môi trường đã tạo Private Hosted Zone này. Nhấp vào tên của Private Hosted Zone, s3.us-east-1.amazonaws.com: Tạo 1 record mới trong Private Hosted Zone: Giữ nguyên Record name và record type Alias Button: click để enable Route traffic to: Alias to VPC Endpoint Region: US East (N. Virginia) [us-east-1] Chọn endpoint: Paste tên (Regional VPC Endpoint DNS) bạn đã lưu lại ở phần 4.3 Click Add another record, và add 1 cái record thứ 2 sử dụng những thông số sau: Record name: *. Record type: giữ giá trị default (type A) Alias Button: Click để enable Route traffic to: Alias to VPC Endpoint Region: US East (N. Virginia) [us-east-1] Chọn endpoint: Paste tên (Regional VPC Endpoint DNS) bạn đã lưu lại ở phần 4.3 Click Create records Record mới xuất hiện trên giao diện Route 53.\nTạo một Resolver Forwarding Rule Route 53 Resolver Forwarding Rules cho phép bạn chuyển tiếp các DNS queries từ VPC của bạn đến các nguồn khác để resolve name. Bên ngoài môi trường workshop, bạn có thể sử dụng tính năng này để chuyển tiếp các DNS queries từ VPC của bạn đến các máy chủ DNS chạy trên on-premises. Trong phần này, bạn sẽ mô phỏng một on-premises conditional forwarder bằng cách tạo một forwarding rule để chuyển tiếp các DNS queries for Amazon S3 đến một Private Hosted Zone chạy trong \u0026ldquo;VPC Cloud\u0026rdquo; để resolve PrivateLink interface endpoint regional DNS name.\nTừ giao diện Route 53, chọn Inbound endpoints trên thanh bên trái\nTrong giao diện Inbound endpoint, Chọn ID của Inbound endpoint.\nSao chép 2 địa chỉ IP trong danh sách vào trình chỉnh sửa. Từ giao diện Route 53, chọn Resolver \u0026gt; Rules và chọn Create rule Trong giao diện Create rule Name: myS3Rule Rule type: Forward Domain name: s3.us-east-1.amazonaws.com VPC: VPC On-prem Outbound endpoint: VPCOnpremOutboundEndpoint Target IP Addresses: điền cả hai IP bạn đã lưu trữ trên trình soạn thảo (inbound endpoint addresses) và sau đó chọn Submit Bạn đã tạo thành công resolver forwarding rule.\nKiểm tra on-premises DNS mô phỏng. Kết nối đến Test-Interface-Endpoint EC2 instance với Session Manager Kiểm tra DNS resolution. Lệnh dig sẽ trả về địa chỉ IP được gán cho VPC endpoint interface đang chạy trên VPC (địa chỉ IP của bạn sẽ khác): dig +short s3.us-east-1.amazonaws.com Các địa chỉ IP được trả về là các địa chỉ IP VPC enpoint, KHÔNG phải là các địa chỉ IP Resolver mà bạn đã dán từ trình chỉnh sửa văn bản của mình. Các địa chỉ IP của Resolver endpoint và VPC endpoin trông giống nhau vì chúng đều từ khối CIDR VPC Cloud.\nTruy cập vào menu VPC (phần Endpoints), chọn S3 interface endpoint. Nhấp vào tab Subnets và xác nhận rằng các địa chỉ IP được trả về bởi lệnh Dig khớp với VPC endpoint: Hãy quay lại shell của bạn và sử dụng AWS CLI để kiểm tra danh sách các bucket S3 của bạn: aws s3 ls --endpoint-url https://s3.us-east-1.amazonaws.com Kết thúc phiên làm việc của Session Manager của bạn: Trong phần này, bạn đã tạo một Interface Endpoint cho Amazon S3. Điểm cuối này có thể được truy cập từ on-premises thông qua Site-to-Site VPN hoặc AWS Direct Connect. Các điểm cuối Route 53 Resolver outbound giả lập chuyển tiếp các yêu cầu DNS từ on-premises đến một Private Hosted Zone đang chạy trên đám mây. Các điểm cuối Route 53 inbound nhận yêu cầu giải quyết và trả về một phản hồi chứa địa chỉ IP của Interface Endpoint VPC. Sử dụng DNS để giải quyết các địa chỉ IP của điểm cuối cung cấp tính sẵn sàng cao trong trường hợp một Availability Zone gặp sự cố.\n"
},
{
	"uri": "https://tuanvu250.github.io/FCJ-Report/vi/5-workshop/5.4-s3-onprem/",
	"title": "Truy cập S3 từ môi trường truyền thống",
	"tags": [],
	"description": "",
	"content": "Tổng quan Trong phần này, bạn sẽ tạo một Interface Endpoint để truy cập Amazon S3 từ môi trường truyền thống mô phỏng. Interface Endpoint sẽ cho phép bạn định tuyến đến Amazon S3 qua kết nối VPN từ môi trường truyền thống mô phỏng của bạn.\nTại sao nên sử dụng Interface Endpoint:\nCác Gateway endpoints chỉ hoạt động với các tài nguyên đang chạy trong VPC nơi chúng được tạo. Interface Endpoint hoạt động với tài nguyên chạy trong VPC và cả tài nguyên chạy trong môi trường truyền thống. Khả năng kết nối từ môi trường truyền thống của bạn với aws cloud có thể được cung cấp bởi AWS Site-to-Site VPN hoặc AWS Direct Connect. Interface Endpoint cho phép bạn kết nối với các dịch vụ do AWS PrivateLink cung cấp. Các dịch vụ này bao gồm một số dịch vụ AWS, dịch vụ do các đối tác và khách hàng AWS lưu trữ trong VPC của riêng họ (gọi tắt là Dịch vụ PrivateLink endpoints) và các dịch vụ Đối tác AWS Marketplace. Đối với workshop này, chúng ta sẽ tập trung vào việc kết nối với Amazon S3. "
},
{
	"uri": "https://tuanvu250.github.io/FCJ-Report/vi/5-workshop/5.5-policy/",
	"title": "VPC Endpoint Policies",
	"tags": [],
	"description": "",
	"content": "Khi bạn tạo một Interface Endpoint hoặc cổng, bạn có thể đính kèm một chính sách điểm cuối để kiểm soát quyền truy cập vào dịch vụ mà bạn đang kết nối. Chính sách VPC Endpoint là chính sách tài nguyên IAM mà bạn đính kèm vào điểm cuối. Nếu bạn không đính kèm chính sách khi tạo điểm cuối, thì AWS sẽ đính kèm chính sách mặc định cho bạn để cho phép toàn quyền truy cập vào dịch vụ thông qua điểm cuối.\nBạn có thể tạo chính sách chỉ hạn chế quyền truy cập vào các S3 bucket cụ thể. Điều này hữu ích nếu bạn chỉ muốn một số Bộ chứa S3 nhất định có thể truy cập được thông qua điểm cuối.\nTrong phần này, bạn sẽ tạo chính sách VPC Endpoint hạn chế quyền truy cập vào S3 bucket được chỉ định trong chính sách VPC Endpoint.\nKết nối tới EC2 và xác minh kết nối tới S3. Bắt đầu một phiên AWS Session Manager mới trên máy chủ có tên là Test-Gateway-Endpoint. Từ phiên này, xác minh rằng bạn có thể liệt kê nội dung của bucket mà bạn đã tạo trong Phần 1: Truy cập S3 từ VPC. aws s3 ls s3://\u0026lt;your-bucket-name\u0026gt; Nội dung của bucket bao gồm hai tệp có dung lượng 1GB đã được tải lên trước đó.\nTạo một bucket S3 mới; tuân thủ mẫu đặt tên mà bạn đã sử dụng trong Phần 1, nhưng thêm \u0026lsquo;-2\u0026rsquo; vào tên. Để các trường khác là mặc định và nhấp vào Create. Tạo bucket thành công. Policy mặc định cho phép truy cập vào tất cả các S3 Buckets thông qua VPC endpoint.\nTrong giao diện Edit Policy, sao chép và dán theo policy sau, thay thế yourbucketname-2 với tên bucket thứ hai của bạn. Policy này sẽ cho phép truy cập đến bucket mới thông qua VPC endpoint, nhưng không cho phép truy cập đến các bucket còn lại. Chọn Save để kích hoạt policy. {\r\u0026#34;Id\u0026#34;: \u0026#34;Policy1631305502445\u0026#34;,\r\u0026#34;Version\u0026#34;: \u0026#34;2012-10-17\u0026#34;,\r\u0026#34;Statement\u0026#34;: [\r{\r\u0026#34;Sid\u0026#34;: \u0026#34;Stmt1631305501021\u0026#34;,\r\u0026#34;Action\u0026#34;: \u0026#34;s3:*\u0026#34;,\r\u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;,\r\u0026#34;Resource\u0026#34;: [\r\u0026#34;arn:aws:s3:::yourbucketname-2\u0026#34;,\r\u0026#34;arn:aws:s3:::yourbucketname-2/*\u0026#34;\r],\r\u0026#34;Principal\u0026#34;: \u0026#34;*\u0026#34;\r}\r]\r} Cấu hình policy thành công.\nTừ session của bạn trên Test-Gateway-Endpoint instance, kiểm tra truy cập đến S3 bucket bạn tạo ở bước đầu aws s3 ls s3://\u0026lt;yourbucketname\u0026gt; Câu lệnh trả về lỗi bởi vì truy cập vào S3 bucket không có quyền trong VPC endpoint policy.\nTrở lại home directory của bạn trên EC2 instance cd~ Tạo file fallocate -l 1G test-bucket2.xyz Sao chép file lên bucket thứ 2 aws s3 cp test-bucket2.xyz s3://\u0026lt;your-2nd-bucket-name\u0026gt; Thao tác này được cho phép bởi VPC endpoint policy.\nSau đó chúng ta kiểm tra truy cập vào S3 bucket đầu tiên\naws s3 cp test-bucket2.xyz s3://\u0026lt;your-1st-bucket-name\u0026gt;\nCâu lệnh xảy ra lỗi bởi vì bucket không có quyền truy cập bởi VPC endpoint policy.\nTrong phần này, bạn đã tạo chính sách VPC Endpoint cho Amazon S3 và sử dụng AWS CLI để kiểm tra chính sách. Các hoạt động AWS CLI liên quan đến bucket S3 ban đầu của bạn thất bại vì bạn áp dụng một chính sách chỉ cho phép truy cập đến bucket thứ hai mà bạn đã tạo. Các hoạt động AWS CLI nhắm vào bucket thứ hai của bạn thành công vì chính sách cho phép chúng. Những chính sách này có thể hữu ích trong các tình huống khi bạn cần kiểm soát quyền truy cập vào tài nguyên thông qua VPC Endpoint.\n"
},
{
	"uri": "https://tuanvu250.github.io/FCJ-Report/vi/5-workshop/",
	"title": "Workshop",
	"tags": [],
	"description": "",
	"content": "\r⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nĐảm bảo truy cập Hybrid an toàn đến S3 bằng cách sử dụng VPC endpoint Tổng quan AWS PrivateLink cung cấp kết nối riêng tư đến các dịch vụ aws từ VPCs hoặc trung tâm dữ liệu (on-premise) mà không làm lộ lưu lượng truy cập ra ngoài public internet.\nTrong bài lab này, chúng ta sẽ học cách tạo, cấu hình, và kiểm tra VPC endpoints để cho phép workload của bạn tiếp cận các dịch vụ AWS mà không cần đi qua Internet công cộng.\nChúng ta sẽ tạo hai loại endpoints để truy cập đến Amazon S3: gateway vpc endpoint và interface vpc endpoint. Hai loại vpc endpoints này mang đến nhiều lợi ích tùy thuộc vào việc bạn truy cập đến S3 từ môi trường cloud hay từ trung tâm dữ liệu (on-premise).\nGateway - Tạo gateway endpoint để gửi lưu lượng đến Amazon S3 hoặc DynamoDB using private IP addresses. Bạn điều hướng lưu lượng từ VPC của bạn đến gateway endpoint bằng các bảng định tuyến (route tables) Interface - Tạo interface endpoint để gửi lưu lượng đến các dịch vụ điểm cuối (endpoints) sử dụng Network Load Balancer để phân phối lưu lượng. Lưu lượng dành cho dịch vụ điểm cuối được resolved bằng DNS. Nội dung Tổng quan về workshop Chuẩn bị Truy cập đến S3 từ VPC Truy cập đến S3 từ TTDL On-premises VPC Endpoint Policies (làm thêm) Dọn dẹp tài nguyên "
},
{
	"uri": "https://tuanvu250.github.io/FCJ-Report/vi/5-workshop/5.6-cleanup/",
	"title": "Dọn dẹp tài nguyên",
	"tags": [],
	"description": "",
	"content": "Dọn dẹp tài nguyên Xin chúc mừng bạn đã hoàn thành xong lab này! Trong lab này, bạn đã học về các mô hình kiến trúc để truy cập Amazon S3 mà không sử dụng Public Internet.\nBằng cách tạo Gateway endpoint, bạn đã cho phép giao tiếp trực tiếp giữa các tài nguyên EC2 và Amazon S3, mà không đi qua Internet Gateway. Bằng cách tạo Interface endpoint, bạn đã mở rộng kết nối S3 đến các tài nguyên chạy trên trung tâm dữ liệu trên chỗ của bạn thông qua AWS Site-to-Site VPN hoặc Direct Connect. Dọn dẹp Điều hướng đến Hosted Zones trên phía trái của bảng điều khiển Route 53. Nhấp vào tên của s3.us-east-1.amazonaws.com zone. Nhấp vào Delete và xác nhận việc xóa bằng cách nhập từ khóa \u0026ldquo;delete\u0026rdquo;. Disassociate Route 53 Resolver Rule - myS3Rule from \u0026ldquo;VPC Onprem\u0026rdquo; and Delete it. 4.Mở console của CloudFormation và xóa hai stack CloudFormation mà bạn đã tạo cho bài thực hành này:\nPLOnpremSetup PLCloudSetup Xóa các S3 bucket Mở bảng điều khiển S3 Chọn bucket chúng ta đã tạo cho lab, nhấp chuột và xác nhận là empty. Nhấp Delete và xác nhận delete. "
},
{
	"uri": "https://tuanvu250.github.io/FCJ-Report/vi/6-self-evaluation/",
	"title": "Tự đánh giá",
	"tags": [],
	"description": "",
	"content": "\r⚠️ Lưu ý: Các thông tin dưới đây chỉ nhằm mục đích tham khảo, vui lòng không sao chép nguyên văn cho bài báo cáo của bạn kể cả warning này.\nTrong suốt thời gian thực tập tại [Tên công ty/tổ chức] từ [ngày bắt đầu] đến [ngày kết thúc], tôi đã có cơ hội học hỏi, rèn luyện và áp dụng kiến thức đã được trang bị tại trường vào môi trường làm việc thực tế.\nTôi đã tham gia [mô tả ngắn gọn dự án hoặc công việc chính], qua đó cải thiện kỹ năng [liệt kê kỹ năng: lập trình, phân tích, viết báo cáo, giao tiếp…].\nVề tác phong, tôi luôn cố gắng hoàn thành tốt nhiệm vụ, tuân thủ nội quy, và tích cực trao đổi với đồng nghiệp để nâng cao hiệu quả công việc.\nĐể phản ánh một cách khách quan quá trình thực tập, tôi xin tự đánh giá bản thân dựa trên các tiêu chí dưới đây:\nSTT Tiêu chí Mô tả Tốt Khá Trung bình 1 Kiến thức và kỹ năng chuyên môn Hiểu biết về ngành, áp dụng kiến thức vào thực tế, kỹ năng sử dụng công cụ, chất lượng công việc ✅ ☐ ☐ 2 Khả năng học hỏi Tiếp thu kiến thức mới, học hỏi nhanh ☐ ✅ ☐ 3 Chủ động Tự tìm hiểu, nhận nhiệm vụ mà không chờ chỉ dẫn ✅ ☐ ☐ 4 Tinh thần trách nhiệm Hoàn thành công việc đúng hạn, đảm bảo chất lượng ✅ ☐ ☐ 5 Kỷ luật Tuân thủ giờ giấc, nội quy, quy trình làm việc ☐ ☐ ✅ 6 Tính cầu tiến Sẵn sàng nhận feedback và cải thiện bản thân ☐ ✅ ☐ 7 Giao tiếp Trình bày ý tưởng, báo cáo công việc rõ ràng ☐ ✅ ☐ 8 Hợp tác nhóm Làm việc hiệu quả với đồng nghiệp, tham gia nhóm ✅ ☐ ☐ 9 Ứng xử chuyên nghiệp Tôn trọng đồng nghiệp, đối tác, môi trường làm việc ✅ ☐ ☐ 10 Tư duy giải quyết vấn đề Nhận diện vấn đề, đề xuất giải pháp, sáng tạo ☐ ✅ ☐ 11 Đóng góp vào dự án/tổ chức Hiệu quả công việc, sáng kiến cải tiến, ghi nhận từ team ✅ ☐ ☐ 12 Tổng thể Đánh giá chung về toàn bộ quá trình thực tập ✅ ☐ ☐ Cần cải thiện Nâng cao tính kỹ luật, chấp hành nghiêm chỉnh nội quy của công ty hoặc bất kỳ trong một tổ chức nào Cải thiện trong cách tư duy giải quyết vấn đề Học cách giao tiếp tốt hơn trong giao tiếp hằng ngày và trong công việc, xử lý tình huống "
},
{
	"uri": "https://tuanvu250.github.io/FCJ-Report/vi/7-feedback/",
	"title": "Chia sẻ, đóng góp ý kiến",
	"tags": [],
	"description": "",
	"content": " Tại đây bạn có thể tự do đóng góp ý kiến cá nhân về những trải nghiệm khi tham gia chương trình First Cloud Journey, giúp team FCJ cải thiện những vấn đề còn thiếu sót dựa trên các hạng mục sau:\nĐánh giá chung 1. Môi trường làm việc\nMôi trường làm việc rất thân thiện và cởi mở. Các thành viên trong FCJ luôn sẵn sàng hỗ trợ khi mình gặp khó khăn, kể cả ngoài giờ làm việc. Không gian làm việc gọn gàng, thoải mái, giúp mình tập trung tốt hơn. Tuy nhiên, mình nghĩ có thể bổ sung thêm một số buổi giao lưu hoặc team bonding để mọi người hiểu nhau hơn.\n2. Sự hỗ trợ của mentor / team admin\nMentor hướng dẫn rất chi tiết, giải thích rõ ràng khi mình chưa hiểu và luôn khuyến khích mình đặt câu hỏi. Team admin hỗ trợ các thủ tục, tài liệu và tạo điều kiện để mình làm việc thuận lợi. Mình đánh giá cao việc mentor cho phép mình thử và tự xử lý vấn đề thay vì chỉ đưa đáp án.\n3. Sự phù hợp giữa công việc và chuyên ngành học\nCông việc mình được giao phù hợp với kiến thức mình đã học ở trường, đồng thời mở rộng thêm những mảng mới mà mình chưa từng được tiếp cận. Nhờ vậy, mình vừa củng cố kiến thức nền tảng, vừa học thêm kỹ năng thực tế.\n4. Cơ hội học hỏi \u0026amp; phát triển kỹ năng\nTrong quá trình thực tập, mình học được nhiều kỹ năng mới như sử dụng công cụ quản lý dự án, kỹ năng làm việc nhóm, và cả cách giao tiếp chuyên nghiệp trong môi trường công ty. Mentor cũng chia sẻ nhiều kinh nghiệm thực tế giúp mình định hướng tốt hơn cho sự nghiệp.\n5. Văn hóa \u0026amp; tinh thần đồng đội\nVăn hóa công ty rất tích cực: mọi người tôn trọng lẫn nhau, làm việc nghiêm túc nhưng vẫn vui vẻ. Khi có dự án gấp, mọi người cùng nhau cố gắng, hỗ trợ không phân biệt vị trí. Điều này giúp mình cảm thấy mình là một phần của tập thể, dù chỉ là thực tập sinh.\n6. Chính sách / phúc lợi cho thực tập sinh\nCông ty có hỗ trợ phụ cấp thực tập và tạo điều kiện về thời gian linh hoạt khi cần thiết. Ngoài ra, việc được tham gia các buổi đào tạo nội bộ là một điểm cộng lớn.\nMột số câu hỏi khác Điều bạn hài lòng nhất trong thời gian thực tập? Điều bạn nghĩ công ty cần cải thiện cho các thực tập sinh sau? Nếu giới thiệu cho bạn bè, bạn có khuyên họ thực tập ở đây không? Vì sao? Đề xuất \u0026amp; mong muốn Bạn có đề xuất gì để cải thiện trải nghiệm trong kỳ thực tập? Bạn có muốn tiếp tục chương trình này trong tương lai? Góp ý khác (tự do chia sẻ): "
},
{
	"uri": "https://tuanvu250.github.io/FCJ-Report/vi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://tuanvu250.github.io/FCJ-Report/vi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]